import React, { useState, useEffect } from 'react';
import { Button } from '@/components/ui/button';
import { Card } from '@/components/ui/card';
import { Progress } from '@/components/ui/progress';
import { Badge } from '@/components/ui/badge';
import { useToast } from '@/hooks/use-toast';
import { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';

const Index = () => {
  const { toast } = useToast();
  
  // Load from localStorage
  const loadFromStorage = () => {
    const saved = localStorage.getItem('robuxGameData');
    if (saved) {
      const data = JSON.parse(saved);
      return {
        isSubscribed: data.isSubscribed || false,
        claimCount: data.claimCount || 0,
        totalRobux: data.totalRobux || 0,
        clickProgress: data.clickProgress || 0,
        dailyBonus: data.dailyBonus || false,
        referralCode: data.referralCode || 'RBLX' + Math.random().toString(36).substr(2, 6).toUpperCase()
      };
    }
    return {
      isSubscribed: false,
      claimCount: 0,
      totalRobux: 0,
      clickProgress: 0,
      dailyBonus: false,
      referralCode: 'RBLX' + Math.random().toString(36).substr(2, 6).toUpperCase()
    };
  };

  const savedData = loadFromStorage();
  
  // State management
  const [isSubscribed, setIsSubscribed] = useState(savedData.isSubscribed);
  const [claimCount, setClaimCount] = useState(savedData.claimCount);
  const [timeLeft, setTimeLeft] = useState(0);
  const [totalRobux, setTotalRobux] = useState(savedData.totalRobux);
  const [mainProgress, setMainProgress] = useState(0); // –ù–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 0
  const [clickProgress, setClickProgress] = useState(savedData.clickProgress);
  const [showWinModal, setShowWinModal] = useState(false);
  const [lastWin, setLastWin] = useState({ amount: 0, type: 'robux' });
  const [dailyBonus, setDailyBonus] = useState(savedData.dailyBonus);
  const [referralCode, setReferralCode] = useState(savedData.referralCode);
  const [chatMessage, setChatMessage] = useState('');
  const [realPlayerWins, setRealPlayerWins] = useState([]);

  // Fake players data (35 players as requested)
  const [players, setPlayers] = useState([
    { name: 'RobloxGamer2024', avatar: 'üéÆ', robux: 50, time: '—Å–µ–π—á–∞—Å' },
    { name: 'ProBuilder777', avatar: 'üèóÔ∏è', robux: 100, time: '2 —Å–µ–∫ –Ω–∞–∑–∞–¥' },
    { name: 'NoobSlayer99', avatar: '‚öîÔ∏è', robux: 75, time: '5 —Å–µ–∫ –Ω–∞–∑–∞–¥' },
    { name: 'BlockMaster', avatar: 'üß±', robux: 25, time: '8 —Å–µ–∫ –Ω–∞–∑–∞–¥' },
    { name: 'MegaBuilder2k', avatar: 'üöÄ', robux: 150, time: '12 —Å–µ–∫ –Ω–∞–∑–∞–¥' },
    { name: 'CoolDude123', avatar: 'üòé', robux: 80, time: '15 —Å–µ–∫ –Ω–∞–∑–∞–¥' },
    { name: 'RobuxHunter', avatar: 'üéØ', robux: 65, time: '18 —Å–µ–∫ –Ω–∞–∑–∞–¥' },
    { name: 'BlockChamp', avatar: 'üèÜ', robux: 95, time: '21 —Å–µ–∫ –Ω–∞–∑–∞–¥' },
    { name: 'GamerPro2024', avatar: '‚≠ê', robux: 110, time: '24 —Å–µ–∫ –Ω–∞–∑–∞–¥' },
    { name: 'RobloxKing', avatar: 'üëë', robux: 130, time: '27 —Å–µ–∫ –Ω–∞–∑–∞–¥' },
    { name: 'BuilderBoss', avatar: 'üî®', robux: 45, time: '30 —Å–µ–∫ –Ω–∞–∑–∞–¥' },
    { name: 'SpeedRunner', avatar: '‚ö°', robux: 85, time: '33 —Å–µ–∫ –Ω–∞–∑–∞–¥' },
    { name: 'CraftMaster', avatar: 'üõ†Ô∏è', robux: 70, time: '36 —Å–µ–∫ –Ω–∞–∑–∞–¥' },
    { name: 'RobuxLord', avatar: 'üíé', robux: 120, time: '39 —Å–µ–∫ –Ω–∞–∑–∞–¥' },
    { name: 'GameWiz', avatar: 'üßô', robux: 55, time: '42 —Å–µ–∫ –Ω–∞–∑–∞–¥' },
    { name: 'BlockNinja', avatar: 'ü•∑', robux: 90, time: '45 —Å–µ–∫ –Ω–∞–∑–∞–¥' },
    { name: 'ProGamer99', avatar: 'üé≤', robux: 105, time: '48 —Å–µ–∫ –Ω–∞–∑–∞–¥' },
    { name: 'RobloxStar', avatar: 'üåü', robux: 35, time: '51 —Å–µ–∫ –Ω–∞–∑–∞–¥' },
    { name: 'BuildKing', avatar: 'üè∞', robux: 115, time: '54 —Å–µ–∫ –Ω–∞–∑–∞–¥' },
    { name: 'GameMaster', avatar: 'üéñÔ∏è', robux: 60, time: '57 —Å–µ–∫ –Ω–∞–∑–∞–¥' },
    { name: 'RobuxHero', avatar: 'ü¶∏', robux: 125, time: '1 –º–∏–Ω –Ω–∞–∑–∞–¥' },
    { name: 'BlockExpert', avatar: 'üî•', robux: 40, time: '1 –º–∏–Ω –Ω–∞–∑–∞–¥' },
    { name: 'ProBuilder', avatar: 'üèóÔ∏è', robux: 95, time: '1 –º–∏–Ω –Ω–∞–∑–∞–¥' },
    { name: 'RobloxFan', avatar: '‚ù§Ô∏è', robux: 75, time: '1 –º–∏–Ω –Ω–∞–∑–∞–¥' },
    { name: 'GameChamp', avatar: 'üèÖ', robux: 135, time: '1 –º–∏–Ω –Ω–∞–∑–∞–¥' },
    { name: 'BlockWizard', avatar: 'ü™Ñ', robux: 50, time: '1 –º–∏–Ω –Ω–∞–∑–∞–¥' },
    { name: 'RobuxSeeker', avatar: 'üîç', robux: 80, time: '1 –º–∏–Ω –Ω–∞–∑–∞–¥' },
    { name: 'BuilderPro', avatar: '‚öíÔ∏è', robux: 100, time: '1 –º–∏–Ω –Ω–∞–∑–∞–¥' },
    { name: 'GameGuru', avatar: 'üß†', robux: 65, time: '1 –º–∏–Ω –Ω–∞–∑–∞–¥' },
    { name: 'RobloxAce', avatar: 'üÉè', robux: 110, time: '1 –º–∏–Ω –Ω–∞–∑–∞–¥' },
    { name: 'BlockSage', avatar: 'üë¥', robux: 85, time: '1 –º–∏–Ω –Ω–∞–∑–∞–¥' },
    { name: 'ProGamer', avatar: 'üéÆ', robux: 70, time: '1 –º–∏–Ω –Ω–∞–∑–∞–¥' },
    { name: 'RobuxMiner', avatar: '‚õèÔ∏è', robux: 90, time: '1 –º–∏–Ω –Ω–∞–∑–∞–¥' },
    { name: 'BuildGenius', avatar: 'ü§ì', robux: 55, time: '1 –º–∏–Ω –Ω–∞–∑–∞–¥' },
    { name: 'GameLegend', avatar: 'üåü', robux: 140, time: '1 –º–∏–Ω –Ω–∞–∑–∞–¥' }
  ]);

  // Save to localStorage
  useEffect(() => {
    const dataToSave = {
      isSubscribed,
      claimCount,
      totalRobux,
      clickProgress,
      dailyBonus,
      referralCode
    };
    localStorage.setItem('robuxGameData', JSON.stringify(dataToSave));
  }, [isSubscribed, claimCount, totalRobux, clickProgress, dailyBonus, referralCode]);

  // Leaderboard data
  const [leaderboard] = useState([
    { rank: 1, name: 'RobuxKing2024', avatar: 'üëë', robux: 950420 },
    { rank: 2, name: 'BlockMaster99', avatar: 'üéØ', robux: 812350 },
    { rank: 3, name: 'ProGamer777', avatar: 'üéÆ', robux: 759870 },
    { rank: 4, name: 'BuilderPro', avatar: 'üèóÔ∏è', robux: 698560 },
    { rank: 5, name: 'RobloxLord', avatar: '‚ö°', robux: 627230 }
  ]);

  // Chat messages data
  const [chatMessages, setChatMessages] = useState([
    { name: 'RobuxKing2024', avatar: 'üëë', message: '–¢–æ–ª—å–∫–æ —á—Ç–æ –ø–æ–ª—É—á–∏–ª 850 —Ä–æ–±—É–∫—Å–æ–≤! üî•', time: '—Å–µ–π—á–∞—Å' },
    { name: 'ProGamer777', avatar: 'üéÆ', message: '–ö—Ç–æ –∑–Ω–∞–µ—Ç —Å–µ–∫—Ä–µ—Ç–Ω—ã–µ –∫–æ–¥—ã –Ω–∞ —Ä–æ–±—É–∫—Å—ã?', time: '1 –º–∏–Ω –Ω–∞–∑–∞–¥' },
    { name: 'BlockMaster99', avatar: 'üéØ', message: '–≠—Ç–æ—Ç —Å–∞–π—Ç –ª—É—á—à–∏–π –¥–ª—è —Ñ–∞—Ä–º–∞ —Ä–æ–±—É–∫—Å–æ–≤!', time: '2 –º–∏–Ω –Ω–∞–∑–∞–¥' },
    { name: 'GameChamp', avatar: 'üèÖ', message: '–°–∫–∞—á–∞–ª –∞–≤—Ç–æ–∫–ª–∏–∫–µ—Ä, —Ç–µ–ø–µ—Ä—å —Ä–æ–±—É–∫—Å—ã —Å–∞–º–∏ –∫–∞–ø–∞—é—Ç üí∞', time: '3 –º–∏–Ω –Ω–∞–∑–∞–¥' },
    { name: 'RobuxLord', avatar: '‚ö°', message: '–î—Ä—É–∑—å—è, –Ω–µ –∑–∞–±—ã–≤–∞–π—Ç–µ –ø–æ–¥–ø–∏—Å—ã–≤–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª!', time: '4 –º–∏–Ω –Ω–∞–∑–∞–¥' }
  ]);

  // Support data
  const [supportOpen, setSupportOpen] = useState(false);

  // Analytics data
  const [analytics] = useState({
    visitors: 142847,
    robuxClaimed: 8942356,
    activeUsers: 3247
  });

  // Timer effect
  useEffect(() => {
    if (timeLeft > 0) {
      const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);
      return () => clearTimeout(timer);
    }
  }, [timeLeft]);

  // Auto-update players
  useEffect(() => {
    const interval = setInterval(() => {
      setPlayers(prev => {
        const newPlayers = [...prev];
        const randomIndex = Math.floor(Math.random() * newPlayers.length);
        newPlayers[randomIndex] = {
          ...newPlayers[randomIndex],
          robux: Math.floor(Math.random() * 200) + 25,
          time: '—Å–µ–π—á–∞—Å'
        };
        return newPlayers.map((player, index) => 
          index === randomIndex ? player : { ...player, time: updateTime(player.time) }
        );
      });
    }, 3000);
    return () => clearInterval(interval);
  }, []);

  // Auto-update chat
  useEffect(() => {
    const chatInterval = setInterval(() => {
      const newMessages = [
        '–ë–ª—è, —ç—Ç–æ—Ç —Å–∞–π—Ç –æ—Ö—É–µ–Ω–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç! –£–∂–µ 5–∫ —Ä–æ–±—É–∫—Å–æ–≤!',
        '–ß–µ–∫–∞–π—Ç–µ –∞–≤—Ç–æ–∫–ª–∏–∫–µ—Ä, –æ–Ω –¥–æ—Ö—É—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π!',
        '–Å–±–∞–Ω—ã–π –≤ —Ä–æ—Ç, –ø—Ä–æ–º–æ-–∫–æ–¥ —Å—Ä–∞–±–æ—Ç–∞–ª! 1000 —Ä–æ–±—É–∫—Å–æ–≤!',
        '–ü–∏–∑–¥–µ—Ü –∫–∞–∫ –∫—Ä—É—Ç–æ! –ü–æ–¥–ø–∏—Å–∞–ª—Å—è –∏ —Å—Ä–∞–∑—É —Ä–æ–±—É–∫—Å—ã!',
        '–†–µ–±—è—Ç–∞, –Ω–µ –µ–±–∏—Ç–µ –º–æ–∑–≥–∏, —Å–∞–π—Ç —Ä–∞–±–æ—á–∏–π!',
        '–ê–≤—Ç–æ–∫–ª–∏–∫–µ—Ä –≤–∞—â–µ –æ–≥–æ–Ω—å, —Å–∞–º –∫–∞—á–∞–π—Ç–µ!',
        '–ë–ª—è—Ç—å, –∫–∞–∫ –∂–µ —è —Ä–∞–Ω—å—à–µ –±–µ–∑ —ç—Ç–æ–≥–æ –∂–∏–ª?!',
        '–î—Ä—É–∑—å—è, —Ä–µ—Ñ–µ—Ä–∞–ª–∫–∞ –¥–∞–µ—Ç –Ω–µ–ø–ª–æ—Ö–æ–π –±–æ–Ω—É—Å!',
        '–ú–ï–ì–ê –≤—ã–∏–≥—Ä—ã—à 1000 —Ä–æ–±—É–∫—Å–æ–≤! –ê—Ö—É–µ—Ç—å –º–æ–∂–Ω–æ!',
        '–ö–∞–∂–¥—ã–π –¥–µ–Ω—å –∑–∞—Ö–æ–∂—É, –∏–±–æ –Ω–∞—Ö—É–π –Ω–∞–¥–æ —Ä–æ–±—É–∫—Å—ã!',
        '–†–µ–∞–ª—å–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–µ —Ä–∞–∑–≤–æ–¥–Ω—è–∫ –∫–∞–∫–æ–π-—Ç–æ!',
        '–ö—Ç–æ-—Ç–æ –∑–Ω–∞–µ—Ç —Å–µ–∫—Ä–µ—Ç—ã —Ñ–∞—Ä–º–∞ —Ä–æ–±—É–∫—Å–æ–≤?',
        '–ü–æ–¥–ø–∏—Å–∞–ª—Å—è –Ω–∞ –∫–∞–Ω–∞–ª - —Ä–æ–±—É–∫—Å—ã –ø–æ—Ç–µ–∫–ª–∏ —Ä–µ–∫–æ–π!',
        '–≠—Ç–æ—Ç —Ñ–∞—É—á–µ—Ç –ª—É—á—à–µ –≤—Å–µ—Ö, —á—Ç–æ –ø—Ä–æ–±–æ–≤–∞–ª!',
        '–î—Ä—É–∑—å—è, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–µ—Ñ–µ—Ä–∞–ª–∫—É –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ!',
        '–¢–æ–ª—å–∫–æ —á—Ç–æ –≤—ã–∏–≥—Ä–∞–ª –ø—Ä–æ–º–æ-–∫–æ–¥! –°–ø–∞—Å–∏–±–æ!',
        '–ê–≤—Ç–æ–∫–ª–∏–∫–µ—Ä —Ä–µ–∞–ª—å–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç, –≤—Å–µ–º —Å–æ–≤–µ—Ç—É—é!',
        '–†–µ–±—è—Ç–∞, —ç—Ç–æ—Ç —Å–∞–π—Ç —Ç–æ–ø–æ–≤—ã–π! –£–∂–µ –∫—É—á–∞ —Ä–æ–±—É–∫—Å–æ–≤!',
        '–ë–ª—è–¥—å, –∫–∞–∫ –±—ã—Å—Ç—Ä–æ —Ä–æ–±—É–∫—Å—ã –∫–∞–ø–∞—é—Ç —Å –∞–≤—Ç–æ–∫–ª–∏–∫–µ—Ä–æ–º!',
        '–ü–∏–∑–¥–∞—Ç–æ —Å–¥–µ–ª–∞–Ω —Å–∞–π—Ç, –≤—Å–µ —á–µ—Å—Ç–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç!',
        '–ù–∞—Ö—É–π –¥—Ä—É–≥–∏–µ —Å–∞–π—Ç—ã, —ç—Ç–æ—Ç —Å–∞–º—ã–π –ª—É—á—à–∏–π!',
        '–ï–±–∞—Ç—å, —Å–∫–æ–ª—å–∫–æ —è —É–∂–µ —Ç—É—Ç —Ä–æ–±—É–∫—Å–æ–≤ –∑–∞—Ä–∞–±–æ—Ç–∞–ª!',
        '–ß–µ–∫–∞–π—Ç–µ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å, –Ω–µ –∑–∞–±—ã–≤–∞–π—Ç–µ!',
        '–û—Ö—É–µ–Ω–Ω–∞—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞, –≤—Å–µ—Ö –ø—Ä–∏–≥–ª–∞—à–∞—é!',
        '–ë–ª—è, –∫–∞–∫ –∂–µ —è –∫–∞–π—Ñ—É—é –æ—Ç —ç—Ç–∏—Ö —Ä–æ–±—É–∫—Å–æ–≤!'
      ];
      
      setChatMessages(prev => {
        // –ò–∑–±–µ–≥–∞–µ–º –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π
        let randomMessage;
        let attempts = 0;
        do {
          randomMessage = newMessages[Math.floor(Math.random() * newMessages.length)];
          attempts++;
        } while (prev.some(msg => msg.message === randomMessage) && attempts < 10);
        
        const randomPlayer = players[Math.floor(Math.random() * players.length)];
        const newMsg = {
          name: randomPlayer.name,
          avatar: randomPlayer.avatar,
          message: randomMessage,
          time: '—Å–µ–π—á–∞—Å'
        };
        
        const updatedMessages = [newMsg, ...prev.slice(0, 4)].map((msg, index) => 
          index === 0 ? msg : { ...msg, time: updateChatTime(msg.time) }
        );
        
        return updatedMessages;
      });
    }, Math.floor(Math.random() * 4000) + 5000); // 5-8 —Å–µ–∫—É–Ω–¥
    
    return () => clearInterval(chatInterval);
  }, [players]);

  // Update main progress automatically
  useEffect(() => {
    const progressInterval = setInterval(() => {
      setMainProgress(prev => {
        const increment = Math.floor(Math.random() * 5) + 1;
        return Math.min(prev + increment, 10000);
      });
    }, 8000);
    
    return () => clearInterval(progressInterval);
  }, []);

  const updateTime = (currentTime: string) => {
    if (currentTime === '—Å–µ–π—á–∞—Å') return '3 —Å–µ–∫ –Ω–∞–∑–∞–¥';
    if (currentTime === '3 —Å–µ–∫ –Ω–∞–∑–∞–¥') return '6 —Å–µ–∫ –Ω–∞–∑–∞–¥';
    if (currentTime === '6 —Å–µ–∫ –Ω–∞–∑–∞–¥') return '9 —Å–µ–∫ –Ω–∞–∑–∞–¥';
    return currentTime;
  };

  const updateChatTime = (currentTime: string) => {
    if (currentTime === '—Å–µ–π—á–∞—Å') return '1 –º–∏–Ω –Ω–∞–∑–∞–¥';
    if (currentTime === '1 –º–∏–Ω –Ω–∞–∑–∞–¥') return '2 –º–∏–Ω –Ω–∞–∑–∞–¥';
    if (currentTime === '2 –º–∏–Ω –Ω–∞–∑–∞–¥') return '3 –º–∏–Ω –Ω–∞–∑–∞–¥';
    if (currentTime === '3 –º–∏–Ω –Ω–∞–∑–∞–¥') return '4 –º–∏–Ω –Ω–∞–∑–∞–¥';
    if (currentTime === '4 –º–∏–Ω –Ω–∞–∑–∞–¥') return '5 –º–∏–Ω –Ω–∞–∑–∞–¥';
    return currentTime;
  };

  const handleSubscribe = () => {
    window.open('https://www.youtube.com/@madnessgames_?sub_confirmation=1', '_blank');
    setIsSubscribed(true);
    toast({
      title: "–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É! üéâ",
      description: "–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å Robux!",
    });
  };

  const handleClaim = () => {
    if (!isSubscribed || timeLeft > 0) return;

    const newClaimCount = claimCount + 1;
    setClaimCount(newClaimCount);
    setClickProgress(Math.min(clickProgress + 1, 1000));

    let winAmount = 0;
    let winType = 'robux';
    
    // Random win logic
    const random = Math.random();
    if (random < 0.01) { // 1% chance for 1000 Robux
      winAmount = 1000;
      winType = 'mega';
    } else if (random < 0.05) { // 4% chance for promo code
      winType = 'promo';
      winAmount = 0;
    } else { // 95% chance for 10-55 Robux
      winAmount = Math.floor(Math.random() * 46) + 10;
    }

    if (winType !== 'promo') {
      setTotalRobux(totalRobux + winAmount);
    }

    // –î–æ–±–∞–≤–ª—è–µ–º –≤—ã–∏–≥—Ä—ã—à —Ä–µ–∞–ª—å–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –≤ –Ω–µ–¥–∞–≤–Ω–∏–µ –≤—ã–∏–≥—Ä—ã—à–∏
    if (winType !== 'promo') {
      const realPlayerWin = {
        name: '–í—ã',
        avatar: 'üéÆ',
        robux: winAmount,
        time: '—Å–µ–π—á–∞—Å'
      };
      setPlayers(prev => [realPlayerWin, ...prev.slice(0, 34)]);
    }

    setLastWin({ amount: winAmount, type: winType });
    setShowWinModal(true);

    // Set cooldown after 3 claims
    if (newClaimCount % 3 === 0) {
      setTimeLeft(25);
    }

    toast({
      title: winType === 'promo' ? "–ü—Ä–æ–º–æ-–∫–æ–¥ –ø–æ–ª—É—á–µ–Ω! üéüÔ∏è" : `+${winAmount} Robux! üíé`,
      description: winType === 'promo' ? "RBLX2024FREE" : `–í—Å–µ–≥–æ —Å–æ–±—Ä–∞–Ω–æ: ${totalRobux + winAmount} Robux`,
    });
  };

  const formatTime = (seconds: number) => {
    const mins = Math.floor(seconds / 60);
    const secs = seconds % 60;
    return `${mins}:${secs.toString().padStart(2, '0')}`;
  };

  const canClaimMainReward = mainProgress >= 10000;
  const canClaimClickReward = clickProgress >= 1000;

  return (
    <div className="min-h-screen bg-background text-foreground p-4">
      <div className="max-w-6xl mx-auto space-y-6">
        
        {/* Analytics Header */}
        <Card className="stats-card">
          <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
            <div className="text-center">
              <div className="text-2xl font-bold text-robux-green">{analytics.visitors.toLocaleString()}</div>
              <div className="text-sm text-muted-foreground">–ü–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π —Å–µ–≥–æ–¥–Ω—è</div>
            </div>
            <div className="text-center">
              <div className="text-2xl font-bold text-robux-gold">{analytics.robuxClaimed.toLocaleString()}</div>
              <div className="text-sm text-muted-foreground">Robux —Ä–æ–∑–¥–∞–Ω–æ</div>
            </div>
            <div className="text-center">
              <div className="text-2xl font-bold text-robux-blue">{analytics.activeUsers.toLocaleString()}</div>
              <div className="text-sm text-muted-foreground">–û–Ω–ª–∞–π–Ω —Å–µ–π—á–∞—Å</div>
            </div>
          </div>
        </Card>

        {/* Main Progress Bar */}
        <Card className="p-6">
          <div className="space-y-4">
            <div className="flex justify-between items-center">
              <h2 className="text-xl font-bold">–ì–ª–∞–≤–Ω—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å</h2>
              <span className="text-robux-green font-bold">{mainProgress}/10000</span>
            </div>
            <Progress value={(mainProgress / 10000) * 100} className="h-4" />
            <Button 
              className={`w-full ${canClaimMainReward ? 'bg-robux-green hover:bg-robux-green/80' : ''}`}
              disabled={!canClaimMainReward}
              onClick={() => window.open('https://www.youtube.com/@madnessgames_?sub_confirmation=1', '_blank')}
            >
              –ó–∞–±—Ä–∞—Ç—å Robux! {canClaimMainReward ? '‚úÖ' : 'üîí'}
            </Button>
          </div>
        </Card>

        {/* Click Progress Bar */}
        <Card className="p-6">
          <div className="space-y-4">
            <div className="flex justify-between items-center">
              <h2 className="text-xl font-bold">–ü—Ä–æ–≥—Ä–µ—Å—Å –∫–ª–∏–∫–æ–≤</h2>
              <span className="text-robux-purple font-bold">{clickProgress}/1000</span>
            </div>
            <Progress value={(clickProgress / 1000) * 100} className="h-4" />
            <Button 
              className={`w-full ${canClaimClickReward ? 'bg-robux-purple hover:bg-robux-purple/80' : ''}`}
              disabled={!canClaimClickReward}
              onClick={() => window.open('https://t.me/zarabotay_depin', '_blank')}
            >
              –ü–æ–ª—É—á–∏—Ç—å 500 000 R {canClaimClickReward ? '‚úÖ' : 'üîí'}
            </Button>
          </div>
        </Card>

        {/* Main Claim Section */}
        <Card className="p-8 text-center">
          <div className="space-y-6">
            <div className="space-y-2">
              <h1 className="text-4xl font-bold robux-glow">ROBUX FAUCET</h1>
              <p className="text-robux-gold font-bold text-xl">–°–æ–±—Ä–∞–Ω–æ: {totalRobux} Robux</p>
              <Progress value={(totalRobux / 10000) * 100} className="h-3" />
              <p className="text-sm text-muted-foreground">–î–æ 10000 Robux: {10000 - totalRobux}</p>
            </div>

            {!isSubscribed && (
              <Button 
                onClick={handleSubscribe}
                className="bg-red-600 hover:bg-red-700 text-white font-bold py-3 px-8 rounded-xl text-lg"
              >
                üîî –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª
              </Button>
            )}

            <Button 
              onClick={handleClaim}
              disabled={!isSubscribed || timeLeft > 0}
              className="claim-button text-2xl py-6 px-12"
            >
              {timeLeft > 0 ? `–ñ–î–ò–¢–ï ${formatTime(timeLeft)}` : 'CLAIM ROBUX! üíé'}
            </Button>

            {timeLeft > 0 && (
              <div className="text-center">
                <div className="text-3xl font-bold text-robux-blue">{formatTime(timeLeft)}</div>
                <div className="text-sm text-muted-foreground">–¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è</div>
              </div>
            )}

            <div className="space-y-4">
              <Button 
                onClick={() => window.open('https://filelu.com/87w2jnbpbfls', '_blank')}
                className="bg-robux-purple hover:bg-robux-purple/80 text-white font-bold py-4 px-10 rounded-xl text-xl"
              >
                üì± –°–∫–∞—á–∞—Ç—å –ê–≤—Ç–æ–∫–ª–∏–∫–µ—Ä
              </Button>
              <p className="text-sm text-muted-foreground">
                –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–π –¥–µ–π—Å—Ç–≤–∏—è —Å –ø–æ–º–æ—â—å—é –ê–≤—Ç–æ–∫–ª–∏–∫–µ—Ä–∞
              </p>
            </div>
          </div>
        </Card>

        {/* Two Column Layout */}
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
          
          {/* Recent Activity - All 35 Players */}
          <Card className="p-6">
            <h3 className="text-xl font-bold mb-4">üî• –ù–µ–¥–∞–≤–Ω–∏–µ –≤—ã–∏–≥—Ä—ã—à–∏</h3>
            <div className="max-h-80 overflow-y-auto space-y-2">
              {players.map((player, index) => (
                <div key={index} className="player-card flex items-center justify-between">
                  <div className="flex items-center space-x-3">
                    <span className="text-lg">{player.avatar}</span>
                    <div>
                      <div className="font-semibold text-sm">{player.name}</div>
                      <div className="text-xs text-muted-foreground">{player.time}</div>
                    </div>
                  </div>
                  <Badge className="bg-robux-gold text-black text-xs">+{player.robux} R$</Badge>
                </div>
              ))}
            </div>
          </Card>

          {/* Live Chat */}
          <Card className="p-6">
            <h3 className="text-xl font-bold mb-4">üí¨ –ß–∞—Ç –∏–≥—Ä–æ–∫–æ–≤</h3>
            <div className="max-h-64 overflow-y-auto space-y-3 mb-4">
              {chatMessages.map((msg, index) => (
                <div key={index} className="flex items-start space-x-3 animate-fade-in">
                  <span className="text-lg">{msg.avatar}</span>
                  <div className="flex-1">
                    <div className="flex items-center space-x-2">
                      <span className="font-semibold text-sm text-robux-blue">{msg.name}</span>
                      <span className="text-xs text-muted-foreground">{msg.time}</span>
                    </div>
                    <p className="text-sm text-foreground mt-1">{msg.message}</p>
                  </div>
                </div>
              ))}
            </div>
            <div className="flex space-x-2">
              <input 
                type="text" 
                value={chatMessage}
                onChange={(e) => setChatMessage(e.target.value)}
                placeholder="–ù–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ..." 
                className="flex-1 px-3 py-2 bg-input border border-border rounded-lg text-sm"
                onKeyPress={(e) => {
                  if (e.key === 'Enter' && chatMessage.trim()) {
                    setChatMessages(prev => [{
                      name: '–í—ã',
                      avatar: 'üéÆ',
                      message: chatMessage,
                      time: '—Å–µ–π—á–∞—Å'
                    }, ...prev.slice(0, 4)]);
                    setChatMessage('');
                  }
                }}
              />
              <Button 
                size="sm" 
                className="bg-robux-blue"
                onClick={() => {
                  if (chatMessage.trim()) {
                    setChatMessages(prev => [{
                      name: '–í—ã',
                      avatar: 'üéÆ',
                      message: chatMessage,
                      time: '—Å–µ–π—á–∞—Å'
                    }, ...prev.slice(0, 4)]);
                    setChatMessage('');
                  }
                }}
              >
                –û—Ç–ø—Ä–∞–≤–∏—Ç—å
              </Button>
            </div>
          </Card>
        </div>

        {/* Leaderboard and Support Section */}
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
          
          {/* Leaderboard */}
          <Card className="p-6">
            <h3 className="text-xl font-bold mb-4">üèÜ –¢–æ–ø –∏–≥—Ä–æ–∫–æ–≤</h3>
            <div className="space-y-3">
              {leaderboard.map((player) => (
                <div key={player.rank} className="player-card flex items-center justify-between">
                  <div className="flex items-center space-x-3">
                    <div className="w-8 h-8 rounded-full bg-robux-blue flex items-center justify-center text-white font-bold">
                      {player.rank}
                    </div>
                    <span className="text-xl">{player.avatar}</span>
                    <div>
                      <div className="font-semibold">{player.name}</div>
                    </div>
                  </div>
                  <Badge className="bg-robux-gold text-black">{player.robux.toLocaleString()} R$</Badge>
                </div>
              ))}
            </div>
          </Card>

          {/* Support */}
          <Card className="p-6">
            <h3 className="text-xl font-bold mb-4">üõ°Ô∏è –°–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏</h3>
            <div className="space-y-4">
              <div className="bg-secondary p-4 rounded-lg">
                <div className="flex items-center space-x-3 mb-2">
                  <div className="w-8 h-8 rounded-full bg-robux-green flex items-center justify-center">
                    <span className="text-sm font-bold text-background">S</span>
                  </div>
                  <div>
                    <div className="font-semibold text-sm">–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞</div>
                    <div className="text-xs text-muted-foreground">–û–Ω–ª–∞–π–Ω</div>
                  </div>
                </div>
                <p className="text-sm text-foreground">
                  –ü—Ä–∏–≤–µ—Ç! –£ –Ω–∞—Å –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã? –ú—ã –ø–æ–º–æ–∂–µ–º –≤–∞–º –ø–æ–ª—É—á–∏—Ç—å –≤–∞—à–∏ Robux! 
                  –°—Ä–µ–¥–Ω–∏–π –æ—Ç–≤–µ—Ç: 2 –º–∏–Ω—É—Ç—ã ‚ö°
                </p>
              </div>
              
              <div className="space-y-2">
                <Button 
                  onClick={() => setSupportOpen(true)}
                  className="w-full bg-robux-green hover:bg-robux-green/80"
                >
                  üéß –°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π
                </Button>
                <Button 
                  onClick={() => window.open('https://t.me/zarabotay_depin', '_blank')}
                  className="w-full bg-robux-blue hover:bg-robux-blue/80"
                >
                  üìû Telegram –ø–æ–¥–¥–µ—Ä–∂–∫–∞
                </Button>
              </div>

              <div className="text-center space-y-2">
                <div className="text-sm font-semibold text-robux-gold">FAQ</div>
                <div className="text-xs text-muted-foreground space-y-1">
                  <div>‚Ä¢ –ù–µ –ø–æ–ª—É—á–∞—é Robux? –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É!</div>
                  <div>‚Ä¢ –ü—Ä–æ–º–æ-–∫–æ–¥ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç? –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!</div>
                  <div>‚Ä¢ –ê–≤—Ç–æ–∫–ª–∏–∫–µ—Ä –±–µ–∑–æ–ø–∞—Å–µ–Ω? –î–∞, 100%!</div>
                  <div>‚Ä¢ –ë–ª–æ–∫–∏—Ä—É—é—Ç –∞–∫–∫–∞—É–Ω—Ç? –ú—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å!</div>
                  <div>‚Ä¢ –°–∫–æ–ª—å–∫–æ –º–æ–∂–Ω–æ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å? –î–æ 50–∫ Robux –≤ –¥–µ–Ω—å!</div>
                  <div>‚Ä¢ –†–∞–±–æ—Ç–∞–µ—Ç –ª–∏ –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–µ? –î–∞, –ø–æ–ª–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞!</div>
                  <div>‚Ä¢ –ù—É–∂–Ω–∞ –ª–∏ –ø–æ–¥–ø–∏—Å–∫–∞? –¢–æ–ª—å–∫–æ –Ω–∞ YouTube –∫–∞–Ω–∞–ª!</div>
                  <div>‚Ä¢ –ú–æ–∂–Ω–æ –ª–∏ –ø—Ä–æ–∏–≥—Ä–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç? –ù–µ—Ç, —ç—Ç–æ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ!</div>
                  <div>‚Ä¢ –ë–µ–∑–æ–ø–∞—Å–Ω—ã –ª–∏ –º–æ–∏ –¥–∞–Ω–Ω—ã–µ? –ê–±—Å–æ–ª—é—Ç–Ω–æ!</div>
                  <div>‚Ä¢ –ú–æ–≥—É –ª–∏ —è –ø–æ—Ç–µ—Ä—è—Ç—å –∞–∫–∫–∞—É–Ω—Ç Roblox? –ù–∏–∫–æ–≥–¥–∞!</div>
                  <div>‚Ä¢ –¢—Ä–µ–±—É–µ—Ç—Å—è –ª–∏ –ø–∞—Ä–æ–ª—å –æ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞? –ù–µ—Ç!</div>
                  <div>‚Ä¢ –†–∞–±–æ—Ç–∞–µ—Ç –ª–∏ –∞–Ω—Ç–∏–≤–∏—Ä—É—Å —Å –∞–≤—Ç–æ–∫–ª–∏–∫–µ—Ä–æ–º? –î–∞!</div>
                </div>
              </div>
            </div>
          </Card>
        </div>

        {/* Special Features */}
        <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
          <Card className="p-6 text-center">
            <div className="text-4xl mb-3">üéØ</div>
            <h3 className="font-bold text-lg mb-2">–ë–µ–∑ –ª–∏–º–∏—Ç–æ–≤</h3>
            <p className="text-sm text-muted-foreground">–ü–æ–ª—É—á–∞–π—Ç–µ Robux –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –≤—Ä–µ–º–µ–Ω–∏!</p>
          </Card>
          <Card className="p-6 text-center">
            <div className="text-4xl mb-3">‚ö°</div>
            <h3 className="font-bold text-lg mb-2">–ú–≥–Ω–æ–≤–µ–Ω–Ω–æ</h3>
            <p className="text-sm text-muted-foreground">Robux –ø–æ—Å—Ç—É–ø–∞—é—Ç –Ω–∞ –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω–æ!</p>
          </Card>
          <Card className="p-6 text-center">
            <div className="text-4xl mb-3">üîí</div>
            <h3 className="font-bold text-lg mb-2">–ë–µ–∑–æ–ø–∞—Å–Ω–æ</h3>
            <p className="text-sm text-muted-foreground">100% –±–µ–∑–æ–ø–∞—Å–Ω–æ –¥–ª—è –≤–∞—à–µ–≥–æ Roblox –∞–∫–∫–∞—É–Ω—Ç–∞!</p>
          </Card>
        </div>

        {/* Bonus Section */}
        <Card className="p-6">
          <Tabs defaultValue="daily" className="w-full">
            <TabsList className="grid w-full grid-cols-2">
              <TabsTrigger value="daily">üéÅ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å</TabsTrigger>
              <TabsTrigger value="referral">üë• –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞</TabsTrigger>
            </TabsList>
            <TabsContent value="daily" className="space-y-4">
              <div className="text-center space-y-4">
                <h3 className="text-xl font-bold">–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å</h3>
                <p className="text-muted-foreground">–ó–∞—Ö–æ–¥–∏ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –∏ –ø–æ–ª—É—á–∞–π –±–æ–Ω—É—Å—ã!</p>
                <Button 
                  onClick={() => {
                    setDailyBonus(true);
                    setTotalRobux(prev => prev + 50);
                    toast({ title: "–ë–æ–Ω—É—Å –ø–æ–ª—É—á–µ–Ω! +50 Robux üéÅ" });
                  }}
                  disabled={dailyBonus}
                  className="bg-robux-green hover:bg-robux-green/80"
                >
                  {dailyBonus ? '–ü–æ–ª—É—á–µ–Ω–æ —Å–µ–≥–æ–¥–Ω—è ‚úÖ' : '–ü–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å +50 R$'}
                </Button>
              </div>
            </TabsContent>
            <TabsContent value="referral" className="space-y-4">
              <div className="text-center space-y-4">
                <h3 className="text-xl font-bold">–ü—Ä–∏–≥–ª–∞—à–∞–π –¥—Ä—É–∑–µ–π</h3>
                <p className="text-muted-foreground">–ó–∞ –∫–∞–∂–¥–æ–≥–æ –¥—Ä—É–≥–∞ –ø–æ–ª—É—á–∏ 1500 Robux!</p>
                <div className="bg-secondary p-4 rounded-lg">
                  <p className="text-sm mb-2">–¢–≤–æ—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:</p>
                  <div className="bg-background p-2 rounded border font-mono text-robux-blue text-xs break-all">
                    {`${window.location.origin}?ref=${referralCode}`}
                  </div>
                </div>
                <Button 
                  className="bg-robux-blue hover:bg-robux-blue/80"
                  onClick={() => {
                    navigator.clipboard.writeText(`${window.location.origin}?ref=${referralCode}`);
                    toast({ title: "–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞! üìã" });
                  }}
                >
                  –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É
                </Button>
              </div>
            </TabsContent>
          </Tabs>
        </Card>
      </div>

      {/* Support Modal */}
      <Dialog open={supportOpen} onOpenChange={setSupportOpen}>
        <DialogContent className="text-center">
          <DialogHeader>
            <DialogTitle className="text-2xl">üõ°Ô∏è –°–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏</DialogTitle>
          </DialogHeader>
          <div className="py-6 space-y-4">
            <div className="text-lg font-semibold text-robux-green">–ö–∞–∫ –º—ã –º–æ–∂–µ–º –ø–æ–º–æ—á—å?</div>
            <div className="space-y-3 text-left">
              <div className="bg-secondary p-3 rounded-lg">
                <div className="font-semibold text-sm">‚ùì –ù–µ –ø–æ–ª—É—á–∞—é Robux</div>
                <p className="text-xs text-muted-foreground mt-1">–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª –∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</p>
              </div>
              <div className="bg-secondary p-3 rounded-lg">
                <div className="font-semibold text-sm">üéüÔ∏è –ü—Ä–æ–º–æ-–∫–æ–¥ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç</div>
                <p className="text-xs text-muted-foreground mt-1">–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –∫–æ–¥ –∑–∞–Ω–æ–≤–æ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É</p>
              </div>
              <div className="bg-secondary p-3 rounded-lg">
                <div className="font-semibold text-sm">üì± –ü—Ä–æ–±–ª–µ–º—ã —Å –∞–≤—Ç–æ–∫–ª–∏–∫–µ—Ä–æ–º</div>
                <p className="text-xs text-muted-foreground mt-1">–°–∫–∞—á–∞–π—Ç–µ –ø–æ—Å–ª–µ–¥–Ω—é—é –≤–µ—Ä—Å–∏—é –∏ –æ—Ç–∫–ª—é—á–∏—Ç–µ –∞–Ω—Ç–∏–≤–∏—Ä—É—Å</p>
              </div>
            </div>
            <Button 
              onClick={() => window.open('https://t.me/zarabotay_depin', '_blank')}
              className="w-full bg-robux-blue hover:bg-robux-blue/80"
            >
              üìû –ù–∞–ø–∏—Å–∞—Ç—å –≤ Telegram
            </Button>
          </div>
          <Button onClick={() => setSupportOpen(false)} className="w-full">
            –ó–∞–∫—Ä—ã—Ç—å
          </Button>
        </DialogContent>
      </Dialog>

      {/* Win Modal */}
      <Dialog open={showWinModal} onOpenChange={setShowWinModal}>
        <DialogContent className="text-center">
          <DialogHeader>
            <DialogTitle className="text-2xl">
              {lastWin.type === 'mega' ? 'üéâ –ú–ï–ì–ê –í–´–ò–ì–†–´–®! üéâ' : 
               lastWin.type === 'promo' ? 'üéüÔ∏è –ü–†–û–ú–û-–ö–û–î! üéüÔ∏è' : 'üíé –ü–û–ó–î–†–ê–í–õ–Ø–ï–ú! üíé'}
            </DialogTitle>
          </DialogHeader>
          <div className="py-6">
            <div className="text-6xl coin-animation mb-4">
              {lastWin.type === 'mega' ? 'üí∞' : lastWin.type === 'promo' ? 'üéüÔ∏è' : 'üíé'}
            </div>
            <div className="text-4xl font-bold robux-glow mb-2">
              {lastWin.type === 'promo' ? 'RBLX2024FREE' : `+${lastWin.amount} Robux`}
            </div>
            <p className="text-muted-foreground">
              {lastWin.type === 'mega' ? '–ù–µ–≤–µ—Ä–æ—è—Ç–Ω–∞—è —É–¥–∞—á–∞!' : 
               lastWin.type === 'promo' ? '–ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–¥ –≤ Roblox' : '–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞!'}
            </p>
          </div>
          <Button onClick={() => setShowWinModal(false)} className="w-full">
            –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å
          </Button>
        </DialogContent>
      </Dialog>
    </div>
  );
};

export default Index;