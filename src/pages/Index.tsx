import React, { useState, useEffect } from 'react';
import { Button } from '@/components/ui/button';
import { Card } from '@/components/ui/card';
import { Progress } from '@/components/ui/progress';
import { Badge } from '@/components/ui/badge';
import { useToast } from '@/hooks/use-toast';
import { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Share2, Timer } from 'lucide-react';

const Index = () => {
  const { toast } = useToast();
  
  // Load from localStorage
  const loadFromStorage = () => {
    const saved = localStorage.getItem('robuxGameData');
    if (saved) {
      const data = JSON.parse(saved);
      return {
        isSubscribed: data.isSubscribed || false,
        claimCount: data.claimCount || 0,
        totalRobux: data.totalRobux || 0,
        clickProgress: data.clickProgress || 0,
        dailyBonus: data.dailyBonus || false,
        referralCode: data.referralCode || 'RBLX' + Math.random().toString(36).substr(2, 6).toUpperCase()
      };
    }
    return {
      isSubscribed: false,
      claimCount: 0,
      totalRobux: 0,
      clickProgress: 0,
      dailyBonus: false,
      referralCode: 'RBLX' + Math.random().toString(36).substr(2, 6).toUpperCase()
    };
  };

  const savedData = loadFromStorage();
  
  // State management
  const [isSubscribed, setIsSubscribed] = useState(savedData.isSubscribed);
  const [claimCount, setClaimCount] = useState(savedData.claimCount);
  const [timeLeft, setTimeLeft] = useState(0);
  const [totalRobux, setTotalRobux] = useState(savedData.totalRobux);
  const [mainProgress, setMainProgress] = useState(0); // –ù–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 0
  const [clickProgress, setClickProgress] = useState(savedData.clickProgress);
  const [showWinModal, setShowWinModal] = useState(false);
  const [lastWin, setLastWin] = useState({ amount: 0, type: 'robux' });
  const [dailyBonus, setDailyBonus] = useState(savedData.dailyBonus);
  const [referralCode, setReferralCode] = useState(savedData.referralCode);
  const [chatMessage, setChatMessage] = useState('');
  const [realPlayerWins, setRealPlayerWins] = useState([]);

  // Fake players data (35 players as requested)
  const [players, setPlayers] = useState([
    { name: 'RobloxGamer2024', avatar: 'üéÆ', robux: 50, time: '—Å–µ–π—á–∞—Å', isRealPlayer: false },
    { name: 'ProBuilder777', avatar: 'üèóÔ∏è', robux: 100, time: '2 —Å–µ–∫ –Ω–∞–∑–∞–¥', isRealPlayer: false },
    { name: 'NoobSlayer99', avatar: '‚öîÔ∏è', robux: 75, time: '5 —Å–µ–∫ –Ω–∞–∑–∞–¥', isRealPlayer: false },
    { name: 'BlockMaster', avatar: 'üß±', robux: 25, time: '8 —Å–µ–∫ –Ω–∞–∑–∞–¥', isRealPlayer: false },
    { name: 'MegaBuilder2k', avatar: 'üöÄ', robux: 150, time: '12 —Å–µ–∫ –Ω–∞–∑–∞–¥', isRealPlayer: false },
    { name: 'CoolDude123', avatar: 'üòé', robux: 80, time: '15 —Å–µ–∫ –Ω–∞–∑–∞–¥', isRealPlayer: false },
    { name: 'RobuxHunter', avatar: 'üéØ', robux: 65, time: '18 —Å–µ–∫ –Ω–∞–∑–∞–¥', isRealPlayer: false },
    { name: 'BlockChamp', avatar: 'üèÜ', robux: 95, time: '21 —Å–µ–∫ –Ω–∞–∑–∞–¥', isRealPlayer: false },
    { name: 'GamerPro2024', avatar: '‚≠ê', robux: 110, time: '24 —Å–µ–∫ –Ω–∞–∑–∞–¥', isRealPlayer: false },
    { name: 'RobloxKing', avatar: 'üëë', robux: 130, time: '27 —Å–µ–∫ –Ω–∞–∑–∞–¥', isRealPlayer: false },
    { name: 'BuilderBoss', avatar: 'üî®', robux: 45, time: '30 —Å–µ–∫ –Ω–∞–∑–∞–¥', isRealPlayer: false },
    { name: 'SpeedRunner', avatar: '‚ö°', robux: 85, time: '33 —Å–µ–∫ –Ω–∞–∑–∞–¥', isRealPlayer: false },
    { name: 'CraftMaster', avatar: 'üõ†Ô∏è', robux: 70, time: '36 —Å–µ–∫ –Ω–∞–∑–∞–¥', isRealPlayer: false },
    { name: 'RobuxLord', avatar: 'üíé', robux: 120, time: '39 —Å–µ–∫ –Ω–∞–∑–∞–¥', isRealPlayer: false },
    { name: 'GameWiz', avatar: 'üßô', robux: 55, time: '42 —Å–µ–∫ –Ω–∞–∑–∞–¥', isRealPlayer: false },
    { name: 'BlockNinja', avatar: 'ü•∑', robux: 90, time: '45 —Å–µ–∫ –Ω–∞–∑–∞–¥', isRealPlayer: false },
    { name: 'ProGamer99', avatar: 'üé≤', robux: 105, time: '48 —Å–µ–∫ –Ω–∞–∑–∞–¥', isRealPlayer: false },
    { name: 'RobloxStar', avatar: 'üåü', robux: 35, time: '51 —Å–µ–∫ –Ω–∞–∑–∞–¥', isRealPlayer: false },
    { name: 'BuildKing', avatar: 'üè∞', robux: 115, time: '54 —Å–µ–∫ –Ω–∞–∑–∞–¥', isRealPlayer: false },
    { name: 'GameMaster', avatar: 'üéñÔ∏è', robux: 60, time: '57 —Å–µ–∫ –Ω–∞–∑–∞–¥', isRealPlayer: false },
    { name: 'RobuxHero', avatar: 'ü¶∏', robux: 125, time: '1 –º–∏–Ω –Ω–∞–∑–∞–¥', isRealPlayer: false },
    { name: 'BlockExpert', avatar: 'üî•', robux: 40, time: '1 –º–∏–Ω –Ω–∞–∑–∞–¥', isRealPlayer: false },
    { name: 'ProBuilder', avatar: 'üèóÔ∏è', robux: 95, time: '1 –º–∏–Ω –Ω–∞–∑–∞–¥', isRealPlayer: false },
    { name: 'RobloxFan', avatar: '‚ù§Ô∏è', robux: 75, time: '1 –º–∏–Ω –Ω–∞–∑–∞–¥', isRealPlayer: false },
    { name: 'GameChamp', avatar: 'üèÖ', robux: 135, time: '1 –º–∏–Ω –Ω–∞–∑–∞–¥', isRealPlayer: false },
    { name: 'BlockWizard', avatar: 'ü™Ñ', robux: 50, time: '1 –º–∏–Ω –Ω–∞–∑–∞–¥', isRealPlayer: false },
    { name: 'RobuxSeeker', avatar: 'üîç', robux: 80, time: '1 –º–∏–Ω –Ω–∞–∑–∞–¥', isRealPlayer: false },
    { name: 'BuilderPro', avatar: '‚öíÔ∏è', robux: 100, time: '1 –º–∏–Ω –Ω–∞–∑–∞–¥', isRealPlayer: false },
    { name: 'GameGuru', avatar: 'üß†', robux: 65, time: '1 –º–∏–Ω –Ω–∞–∑–∞–¥', isRealPlayer: false },
    { name: 'RobloxAce', avatar: 'üÉè', robux: 110, time: '1 –º–∏–Ω –Ω–∞–∑–∞–¥', isRealPlayer: false },
    { name: 'BlockSage', avatar: 'üë¥', robux: 85, time: '1 –º–∏–Ω –Ω–∞–∑–∞–¥', isRealPlayer: false },
    { name: 'ProGamer', avatar: 'üéÆ', robux: 70, time: '1 –º–∏–Ω –Ω–∞–∑–∞–¥', isRealPlayer: false },
    { name: 'RobuxMiner', avatar: '‚õèÔ∏è', robux: 90, time: '1 –º–∏–Ω –Ω–∞–∑–∞–¥', isRealPlayer: false },
    { name: 'BuildGenius', avatar: 'ü§ì', robux: 55, time: '1 –º–∏–Ω –Ω–∞–∑–∞–¥', isRealPlayer: false },
    { name: 'GameLegend', avatar: 'üåü', robux: 140, time: '1 –º–∏–Ω –Ω–∞–∑–∞–¥', isRealPlayer: false }
  ]);

  // Save to localStorage
  useEffect(() => {
    const dataToSave = {
      isSubscribed,
      claimCount,
      totalRobux,
      clickProgress,
      dailyBonus,
      referralCode
    };
    localStorage.setItem('robuxGameData', JSON.stringify(dataToSave));
  }, [isSubscribed, claimCount, totalRobux, clickProgress, dailyBonus, referralCode]);

  // Leaderboard data
  const [leaderboard] = useState([
    { rank: 1, name: 'RobuxKing2024', avatar: 'üëë', robux: 950420 },
    { rank: 2, name: 'BlockMaster99', avatar: 'üéØ', robux: 812350 },
    { rank: 3, name: 'ProGamer777', avatar: 'üéÆ', robux: 759870 },
    { rank: 4, name: 'BuilderPro', avatar: 'üèóÔ∏è', robux: 698560 },
    { rank: 5, name: 'RobloxLord', avatar: '‚ö°', robux: 627230 }
  ]);

  // Chat messages data
  const [chatMessages, setChatMessages] = useState([
    { name: 'RobuxKing2024', avatar: 'üëë', message: '–¢–æ–ª—å–∫–æ —á—Ç–æ –ø–æ–ª—É—á–∏–ª 850 —Ä–æ–±—É–∫—Å–æ–≤! üî•', time: '—Å–µ–π—á–∞—Å' },
    { name: 'ProGamer777', avatar: 'üéÆ', message: '–ö—Ç–æ –∑–Ω–∞–µ—Ç —Å–µ–∫—Ä–µ—Ç–Ω—ã–µ –∫–æ–¥—ã –Ω–∞ —Ä–æ–±—É–∫—Å—ã?', time: '1 –º–∏–Ω –Ω–∞–∑–∞–¥' },
    { name: 'BlockMaster99', avatar: 'üéØ', message: '–≠—Ç–æ—Ç —Å–∞–π—Ç –ª—É—á—à–∏–π –¥–ª—è —Ñ–∞—Ä–º–∞ —Ä–æ–±—É–∫—Å–æ–≤!', time: '2 –º–∏–Ω –Ω–∞–∑–∞–¥' },
    { name: 'GameChamp', avatar: 'üèÖ', message: '–°–∫–∞—á–∞–ª –∞–≤—Ç–æ–∫–ª–∏–∫–µ—Ä, —Ç–µ–ø–µ—Ä—å —Ä–æ–±—É–∫—Å—ã —Å–∞–º–∏ –∫–∞–ø–∞—é—Ç üí∞', time: '3 –º–∏–Ω –Ω–∞–∑–∞–¥' },
    { name: 'RobuxLord', avatar: '‚ö°', message: '–î—Ä—É–∑—å—è, –Ω–µ –∑–∞–±—ã–≤–∞–π—Ç–µ –ø–æ–¥–ø–∏—Å—ã–≤–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª!', time: '4 –º–∏–Ω –Ω–∞–∑–∞–¥' }
  ]);

  // Support data
  const [supportOpen, setSupportOpen] = useState(false);
  const [vipModalOpen, setVipModalOpen] = useState(false);
  const [lotteryModalOpen, setLotteryModalOpen] = useState(false);
  const [lotteryTimeLeft, setLotteryTimeLeft] = useState(86400); // 24 —á–∞—Å–∞ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö

  // Analytics data
  const [analytics] = useState({
    visitors: 142847,
    robuxClaimed: 8942356,
    activeUsers: 3247
  });

  // Timer effect
  useEffect(() => {
    if (timeLeft > 0) {
      const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);
      return () => clearTimeout(timer);
    }
  }, [timeLeft]);

  // Lottery timer effect
  useEffect(() => {
    if (lotteryTimeLeft > 0) {
      const timer = setTimeout(() => setLotteryTimeLeft(lotteryTimeLeft - 1), 1000);
      return () => clearTimeout(timer);
    } else {
      setLotteryTimeLeft(86400); // –°–±—Ä–æ—Å –Ω–∞ 24 —á–∞—Å–∞
    }
  }, [lotteryTimeLeft]);

  // Auto-update players
  useEffect(() => {
    const interval = setInterval(() => {
      setPlayers(prev => {
        const newPlayers = [...prev];
        const randomIndex = Math.floor(Math.random() * newPlayers.length);
        newPlayers[randomIndex] = {
          ...newPlayers[randomIndex],
          robux: Math.floor(Math.random() * 200) + 25,
          time: '—Å–µ–π—á–∞—Å',
          isRealPlayer: false
        };
        return newPlayers.map((player, index) => 
          index === randomIndex ? player : { ...player, time: updateTime(player.time) }
        );
      });
    }, 3000);
    return () => clearInterval(interval);
  }, []);

  // Auto-update chat - –ü–û–õ–ù–û–°–¢–¨–Æ –ù–û–í–´–ô –°–ö–†–ò–ü–¢
  useEffect(() => {
    let chatTimer;
    
    const updateChatMessages = () => {
      const messages = [
        '–≠—Ç–æ—Ç —Å–∞–π—Ç —Ä–µ–∞–ª—å–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç! –£–∂–µ 5–∫ —Ä–æ–±—É–∫—Å–æ–≤!',
        '–ê–≤—Ç–æ–∫–ª–∏–∫–µ—Ä –æ—á–µ–Ω—å —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π!',
        '–ü—Ä–æ–º–æ-–∫–æ–¥ —Å—Ä–∞–±–æ—Ç–∞–ª! 1000 —Ä–æ–±—É–∫—Å–æ–≤!',
        '–ö—Ä—É—Ç–æ! –ü–æ–¥–ø–∏—Å–∞–ª—Å—è –∏ —Å—Ä–∞–∑—É —Ä–æ–±—É–∫—Å—ã!',
        '–†–µ–±—è—Ç–∞, —Å–∞–π—Ç —Ä–∞–±–æ—á–∏–π!',
        '–ê–≤—Ç–æ–∫–ª–∏–∫–µ—Ä –æ–≥–æ–Ω—å, —Å–æ–≤–µ—Ç—É—é!',
        '–ö–∞–∫ –∂–µ —è —Ä–∞–Ω—å—à–µ –±–µ–∑ —ç—Ç–æ–≥–æ –∂–∏–ª?!',
        '–î—Ä—É–∑—å—è, —Ä–µ—Ñ–µ—Ä–∞–ª–∫–∞ –¥–∞–µ—Ç —Ö–æ—Ä–æ—à–∏–π –±–æ–Ω—É—Å!',
        '–ú–ï–ì–ê –≤—ã–∏–≥—Ä—ã—à 1000 —Ä–æ–±—É–∫—Å–æ–≤! –ù–µ–≤–µ—Ä–æ—è—Ç–Ω–æ!',
        '–ö–∞–∂–¥—ã–π –¥–µ–Ω—å –∑–∞—Ö–æ–∂—É, –Ω–∞–¥–æ —Ä–æ–±—É–∫—Å—ã!',
        '–†–µ–∞–ª—å–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–µ –æ–±–º–∞–Ω!',
        '–ö—Ç–æ –∑–Ω–∞–µ—Ç —Å–µ–∫—Ä–µ—Ç—ã —Ñ–∞—Ä–º–∞ —Ä–æ–±—É–∫—Å–æ–≤?',
        '–ü–æ–¥–ø–∏—Å–∞–ª—Å—è –Ω–∞ –∫–∞–Ω–∞–ª - —Ä–æ–±—É–∫—Å—ã –ø–æ—Ç–µ–∫–ª–∏ —Ä–µ–∫–æ–π!',
        '–≠—Ç–æ—Ç —Ñ–∞—É—á–µ—Ç –ª—É—á—à–µ –≤—Å–µ—Ö!',
        '–î—Ä—É–∑—å—è, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–µ—Ñ–µ—Ä–∞–ª–∫—É –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ!',
        '–¢–æ–ª—å–∫–æ —á—Ç–æ –≤—ã–∏–≥—Ä–∞–ª –ø—Ä–æ–º–æ-–∫–æ–¥! –°–ø–∞—Å–∏–±–æ!',
        '–ê–≤—Ç–æ–∫–ª–∏–∫–µ—Ä —Ä–µ–∞–ª—å–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç, –≤—Å–µ–º —Å–æ–≤–µ—Ç—É—é!',
        '–†–µ–±—è—Ç–∞, —ç—Ç–æ—Ç —Å–∞–π—Ç —Ç–æ–ø–æ–≤—ã–π! –£–∂–µ –∫—É—á–∞ —Ä–æ–±—É–∫—Å–æ–≤!',
        '–ö–∞–∫ –±—ã—Å—Ç—Ä–æ —Ä–æ–±—É–∫—Å—ã –∫–∞–ø–∞—é—Ç —Å –∞–≤—Ç–æ–∫–ª–∏–∫–µ—Ä–æ–º!',
        '–û—Ç–ª–∏—á–Ω–æ —Å–¥–µ–ª–∞–Ω —Å–∞–π—Ç, –≤—Å–µ —á–µ—Å—Ç–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç!',
        '–õ—É—á—à–∏–π —Å–∞–π—Ç –∏–∑ –≤—Å–µ—Ö!',
        '–°–∫–æ–ª—å–∫–æ —è —É–∂–µ —Ç—É—Ç —Ä–æ–±—É–∫—Å–æ–≤ –∑–∞—Ä–∞–±–æ—Ç–∞–ª!',
        '–ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å, –Ω–µ –∑–∞–±—ã–≤–∞–π—Ç–µ!',
        '–û—Ç–ª–∏—á–Ω–∞—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞, –≤—Å–µ—Ö –ø—Ä–∏–≥–ª–∞—à–∞—é!',
        '–ö–∞–∫ –∂–µ —è –∫–∞–π—Ñ—É—é –æ—Ç —ç—Ç–∏—Ö —Ä–æ–±—É–∫—Å–æ–≤!',
        '–ó–∞—á–µ–º —Ä–∞–±–æ—Ç–∞—Ç—å, –∫–æ–≥–¥–∞ –µ—Å—Ç—å —ç—Ç–æ—Ç —Å–∞–π—Ç?',
        '–ü–∞—Ü–∞–Ω—ã, –∫—Ç–æ –µ—â–µ –Ω–µ —Å–∫–∞—á–∞–ª –∞–≤—Ç–æ–∫–ª–∏–∫–µ—Ä - –∫–∞—á–∞–π—Ç–µ!',
        '–†–æ–±–ª–æ–∫—Å —Ç–µ–ø–µ—Ä—å –∏–≥—Ä–∞–µ—Ç—Å—è –Ω–∞–º–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–µ–µ!',
        '–í—Å–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥—É—é, –ª—É—á—à–∏–π —Ñ–∞—É—á–µ—Ç —Ä–æ–±—É–∫—Å–æ–≤!',
        '–ó–∞—Ä–∞–±–æ—Ç–∞–ª –±–æ–ª—å—à–µ —Ä–æ–±—É–∫—Å–æ–≤ —á–µ–º –∑–∞ –º–µ—Å—è—Ü –∏–≥—Ä—ã!',
        '–ö–∞–∫ –±—ã—Å—Ç—Ä–æ —Ä–æ–±—É–∫—Å—ã –ø—Ä–∏—Ö–æ–¥—è—Ç!',
        '–ê–≤—Ç–æ–∫–ª–∏–∫–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–∞–∂–µ –∫–æ–≥–¥–∞ —Å–ø–ª—é!',
        '–î—Ä—É–∑—å—è –∑–∞–≤–∏–¥—É—é—Ç –º–æ–∏–º —Ä–æ–±—É–∫—Å–∞–º —Ç–µ–ø–µ—Ä—å!',
        '–ü–æ—á–µ–º—É —è —Ä–∞–Ω—å—à–µ –Ω–µ –∑–Ω–∞–ª –ø—Ä–æ —ç—Ç–æ—Ç —Å–∞–π—Ç?',
        '–†–æ–±–ª–æ–∫—Å —Å—Ç–∞–ª –µ—â–µ –≤–µ—Å–µ–ª–µ–µ —Å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–º–∏ —Ä–æ–±—É–∫—Å–∞–º–∏!',
        '–ü–æ–ª—É—á–∏–ª —É–∂–µ 3000 —Ä–æ–±—É–∫—Å–æ–≤ –∑–∞ –¥–µ–Ω—å!',
        'VIP —Å—Ç–∞—Ç—É—Å —Ç–æ–≥–æ —Å—Ç–æ–∏—Ç!',
        '–ö–∞–∂–¥—ã–π —á–∞—Å –Ω–æ–≤—ã–µ —Ä–æ–∑—ã–≥—Ä—ã—à–∏!',
        '–ë–µ–∑–æ–ø–∞—Å–Ω—ã–π —Å–∞–π—Ç, –∞–∫–∫–∞—É–Ω—Ç –Ω–µ –±–ª–æ–∫–∏—Ä—É—é—Ç!',
        '–õ—É—á—à–∏–π —Å–ø–æ—Å–æ–± –ø–æ–ª—É—á–∏—Ç—å —Ä–æ–±—É–∫—Å—ã!'
      ];
      
      const usernames = [
        'ProGamer2024', 'RobloxMaster', 'GameKing777', 'NoobDestroyer',
        'MegaPlayer', 'RobuxFarmer', 'GameLegend', 'ProBuilder2025',
        'SuperGamer', 'RobuxKing', 'GameHero', 'MasterBuilder',
        'RobloxPro', 'GameChamp', 'RobuxHunter', 'BlockMaster'
      ];
      
      const avatars = ['üéÆ', '‚öîÔ∏è', 'üèóÔ∏è', 'üöÄ', 'üòé', 'üéØ', 'üèÜ', '‚≠ê', 'üëë', 'üî®', '‚ö°', 'üõ†Ô∏è', 'üíé', 'üßô', 'ü•∑', 'üé≤'];
      
      const randomMessage = messages[Math.floor(Math.random() * messages.length)];
      const randomUsername = usernames[Math.floor(Math.random() * usernames.length)];
      const randomAvatar = avatars[Math.floor(Math.random() * avatars.length)];
      
      const newMessage = {
        name: randomUsername,
        avatar: randomAvatar,
        message: randomMessage,
        time: '—Å–µ–π—á–∞—Å'
      };
      
      setChatMessages(prev => {
        const updated = [newMessage, ...prev.slice(0, 4)];
        return updated.map((msg, index) => {
          if (index === 0) return msg;
          let newTime = msg.time;
          if (msg.time === '—Å–µ–π—á–∞—Å') newTime = '1 –º–∏–Ω –Ω–∞–∑–∞–¥';
          else if (msg.time === '1 –º–∏–Ω –Ω–∞–∑–∞–¥') newTime = '2 –º–∏–Ω –Ω–∞–∑–∞–¥';
          else if (msg.time === '2 –º–∏–Ω –Ω–∞–∑–∞–¥') newTime = '3 –º–∏–Ω –Ω–∞–∑–∞–¥';
          else if (msg.time === '3 –º–∏–Ω –Ω–∞–∑–∞–¥') newTime = '4 –º–∏–Ω –Ω–∞–∑–∞–¥';
          else if (msg.time === '4 –º–∏–Ω –Ω–∞–∑–∞–¥') newTime = '5 –º–∏–Ω –Ω–∞–∑–∞–¥';
          return { ...msg, time: newTime };
        });
      });
    };
    
    const startChatTimer = () => {
      const randomDelay = Math.floor(Math.random() * 2000) + 2000; // 2-4 —Å–µ–∫—É–Ω–¥—ã
      chatTimer = setTimeout(() => {
        updateChatMessages();
        startChatTimer();
      }, randomDelay);
    };
    
    startChatTimer();
    
    return () => {
      if (chatTimer) clearTimeout(chatTimer);
    };
  }, []);

  // Update main progress to match totalRobux
  useEffect(() => {
    setMainProgress(totalRobux);
  }, [totalRobux]);

  const updateTime = (currentTime: string) => {
    if (currentTime === '—Å–µ–π—á–∞—Å') return '3 —Å–µ–∫ –Ω–∞–∑–∞–¥';
    if (currentTime === '3 —Å–µ–∫ –Ω–∞–∑–∞–¥') return '6 —Å–µ–∫ –Ω–∞–∑–∞–¥';
    if (currentTime === '6 —Å–µ–∫ –Ω–∞–∑–∞–¥') return '9 —Å–µ–∫ –Ω–∞–∑–∞–¥';
    return currentTime;
  };

  const updateChatTime = (currentTime: string) => {
    if (currentTime === '—Å–µ–π—á–∞—Å') return '1 –º–∏–Ω –Ω–∞–∑–∞–¥';
    if (currentTime === '1 –º–∏–Ω –Ω–∞–∑–∞–¥') return '2 –º–∏–Ω –Ω–∞–∑–∞–¥';
    if (currentTime === '2 –º–∏–Ω –Ω–∞–∑–∞–¥') return '3 –º–∏–Ω –Ω–∞–∑–∞–¥';
    if (currentTime === '3 –º–∏–Ω –Ω–∞–∑–∞–¥') return '4 –º–∏–Ω –Ω–∞–∑–∞–¥';
    if (currentTime === '4 –º–∏–Ω –Ω–∞–∑–∞–¥') return '5 –º–∏–Ω –Ω–∞–∑–∞–¥';
    return currentTime;
  };

  const handleSubscribe = () => {
    window.open('https://www.youtube.com/@madnessgames_?sub_confirmation=1', '_blank');
    setIsSubscribed(true);
    toast({
      title: "–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É! üéâ",
      description: "–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å Robux!",
    });
  };

  const handleClaim = () => {
    if (!isSubscribed || timeLeft > 0) return;

    const newClaimCount = claimCount + 1;
    setClaimCount(newClaimCount);
    setClickProgress(Math.min(clickProgress + 1, 1000));

    let winAmount = 0;
    let winType = 'robux';
    
    // Random win logic
    const random = Math.random();
    if (random < 0.01) { // 1% chance for 1000 Robux
      winAmount = 1000;
      winType = 'mega';
    } else if (random < 0.05) { // 4% chance for promo code
      winType = 'promo';
      winAmount = 0;
    } else { // 95% chance for 10-55 Robux
      winAmount = Math.floor(Math.random() * 46) + 10;
    }

    if (winType !== 'promo') {
      setTotalRobux(totalRobux + winAmount);
    }

    // –£–±—Ä–∞–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—ã–∏–≥—Ä—ã—à–µ–π —Ä–µ–∞–ª—å–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞

    setLastWin({ amount: winAmount, type: winType });
    setShowWinModal(true);

    // Set cooldown after 3 claims
    if (newClaimCount % 3 === 0) {
      setTimeLeft(25);
    }

    toast({
      title: winType === 'promo' ? "–ü—Ä–æ–º–æ-–∫–æ–¥ –ø–æ–ª—É—á–µ–Ω! üéüÔ∏è" : `+${winAmount} Robux! üíé`,
      description: winType === 'promo' ? "RBLX2024FREE" : `–í—Å–µ–≥–æ —Å–æ–±—Ä–∞–Ω–æ: ${totalRobux + winAmount} Robux`,
    });
  };

  const formatTime = (seconds: number) => {
    const mins = Math.floor(seconds / 60);
    const secs = seconds % 60;
    return `${mins}:${secs.toString().padStart(2, '0')}`;
  };

  const formatLotteryTime = (seconds: number) => {
    const hours = Math.floor(seconds / 3600);
    const mins = Math.floor((seconds % 3600) / 60);
    const secs = seconds % 60;
    return `${hours}:${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;
  };

  const shareToSocial = (platform: string) => {
    const url = encodeURIComponent(window.location.href);
    const text = encodeURIComponent('–ü–æ–ª—É—á–∞—é –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ Robux –Ω–∞ —ç—Ç–æ–º —Å–∞–π—Ç–µ! –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å!');
    
    const shareUrls = {
      vk: `https://vk.com/share.php?url=${url}&title=${text}`,
      telegram: `https://t.me/share/url?url=${url}&text=${text}`,
      whatsapp: `https://wa.me/?text=${text}%20${url}`,
      twitter: `https://twitter.com/intent/tweet?text=${text}&url=${url}`
    };
    
    window.open(shareUrls[platform], '_blank', 'width=600,height=400');
  };

  const canClaimMainReward = mainProgress >= 10000;
  const canClaimClickReward = clickProgress >= 1000;

  return (
    <div className="min-h-screen bg-background text-foreground p-2 md:p-4">
      <div className="max-w-7xl mx-auto space-y-4 md:space-y-6">
        
        {/* Header with Share Buttons */}
        <Card className="p-4 text-center">
          <div className="flex flex-col md:flex-row items-center justify-between gap-4">
            <div>
              <h1 className="text-2xl md:text-4xl font-bold text-robux-blue">üéÆ FREE ROBUX GENERATOR</h1>
              <p className="text-sm text-muted-foreground">–ü–æ–ª—É—á–∞–π —Ä–æ–±—É–∫—Å—ã –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ!</p>
            </div>
            <div className="social-card p-3">
              <span className="text-sm font-semibold mb-2 block text-center">üì± –ü–æ–¥–µ–ª–∏—Ç—å—Å—è:</span>
              <div className="grid grid-cols-4 gap-1">
                <Button size="sm" onClick={() => shareToSocial('vk')} className="bg-blue-600 hover:bg-blue-700 text-xs animate-pulse">
                  VK
                </Button>
                <Button size="sm" onClick={() => shareToSocial('telegram')} className="bg-blue-500 hover:bg-blue-600 text-xs animate-bounce">
                  TG
                </Button>
                <Button size="sm" onClick={() => shareToSocial('whatsapp')} className="bg-green-600 hover:bg-green-700 text-xs animate-pulse">
                  WA
                </Button>
                <Button size="sm" onClick={() => shareToSocial('twitter')} className="bg-gray-800 hover:bg-gray-900 text-xs animate-bounce">
                  TW
                </Button>
                <Button size="sm" onClick={() => window.open('https://www.youtube.com/', '_blank')} className="bg-red-600 hover:bg-red-700 text-xs animate-pulse">
                  YT
                </Button>
                <Button size="sm" onClick={() => window.open('https://discord.com/', '_blank')} className="bg-purple-600 hover:bg-purple-700 text-xs animate-bounce">
                  DS
                </Button>
                <Button size="sm" onClick={() => window.open('https://www.tiktok.com/', '_blank')} className="bg-pink-600 hover:bg-pink-700 text-xs animate-pulse">
                  TT
                </Button>
                <Button size="sm" onClick={() => window.open('https://www.reddit.com/', '_blank')} className="bg-orange-600 hover:bg-orange-700 text-xs animate-bounce">
                  RD
                </Button>
              </div>
            </div>
          </div>
        </Card>
        
        {/* Analytics Header */}
        <div className="stats-card pulse-glow">
          <div className="grid grid-cols-1 md:grid-cols-3 gap-3">
            <div className="text-center bounce-slow">
              <div className="text-lg font-bold text-robux-green">{analytics.visitors.toLocaleString()}</div>
              <div className="text-xs text-muted-foreground">–ü–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π —Å–µ–≥–æ–¥–Ω—è</div>
            </div>
            <div className="text-center rotate-slow">
              <div className="text-lg font-bold text-robux-gold">{analytics.robuxClaimed.toLocaleString()}</div>
              <div className="text-xs text-muted-foreground">Robux —Ä–æ–∑–¥–∞–Ω–æ</div>
            </div>
            <div className="text-center bounce-slow">
              <div className="text-lg font-bold text-robux-blue">{analytics.activeUsers.toLocaleString()}</div>
              <div className="text-xs text-muted-foreground">–û–Ω–ª–∞–π–Ω —Å–µ–π—á–∞—Å</div>
            </div>
          </div>
        </div>

        {/* Main Progress Bar */}
        <div className="game-card">
          <div className="space-y-3">
            <div className="flex justify-between items-center">
              <h2 className="text-base font-bold">–ì–ª–∞–≤–Ω—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å</h2>
              <span className="text-robux-green font-bold text-sm">{totalRobux}/1000</span>
            </div>
            <Progress value={(totalRobux / 1000) * 100} className="h-3" />
            <Button 
              className={`w-full text-sm ${canClaimMainReward ? 'bg-robux-green hover:bg-robux-green/80' : ''}`}
              disabled={!canClaimMainReward}
              onClick={() => window.open('https://www.youtube.com/@madnessgames_?sub_confirmation=1', '_blank')}
            >
              –ó–∞–±—Ä–∞—Ç—å Robux! {canClaimMainReward ? '‚úÖ' : 'üîí'}
            </Button>
          </div>
        </div>

        {/* Click Progress Bar */}
        <div className="game-card">
          <div className="space-y-3">
            <div className="flex justify-between items-center">
              <h2 className="text-base font-bold">–ü—Ä–æ–≥—Ä–µ—Å—Å –∫–ª–∏–∫–æ–≤</h2>
              <span className="text-robux-purple font-bold text-sm">{clickProgress}/1000</span>
            </div>
            <Progress value={(clickProgress / 1000) * 100} className="h-3" />
            <Button 
              className={`w-full text-sm ${canClaimClickReward ? 'bg-robux-purple hover:bg-robux-purple/80' : ''}`}
              disabled={!canClaimClickReward}
              onClick={() => window.open('https://t.me/zarabotay_depin', '_blank')}
            >
              –ü–æ–ª—É—á–∏—Ç—å 500 000 R {canClaimClickReward ? '‚úÖ' : 'üîí'}
            </Button>
          </div>
        </div>

        {/* Main Claim Section */}
        <Card className="p-4 md:p-8 text-center">
          <div className="space-y-4 md:space-y-6">
            <div className="space-y-2">
              <h2 className="text-2xl md:text-4xl font-bold text-robux-green">üíé CLAIM ROBUX</h2>
              <p className="text-robux-gold font-bold text-lg md:text-xl">–°–æ–±—Ä–∞–Ω–æ: {totalRobux} Robux</p>
              <Progress value={(totalRobux / 10000) * 100} className="h-2 md:h-3" />
              <p className="text-xs md:text-sm text-muted-foreground">–î–æ 10000 Robux: {10000 - totalRobux}</p>
            </div>

            {!isSubscribed && (
              <Button 
                onClick={handleSubscribe}
                className="bg-red-600 hover:bg-red-700 text-white font-bold py-3 px-6 md:px-8 rounded-xl text-base md:text-lg w-full md:w-auto"
              >
                üîî –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª
              </Button>
            )}

            <Button 
              onClick={handleClaim}
              disabled={!isSubscribed || timeLeft > 0}
              className="claim-button text-lg md:text-2xl py-4 md:py-6 px-8 md:px-12 w-full md:w-auto"
            >
              {timeLeft > 0 ? `–ñ–î–ò–¢–ï ${formatTime(timeLeft)}` : 'CLAIM ROBUX! üíé'}
            </Button>

            {timeLeft > 0 && (
              <div className="text-center">
                <div className="text-2xl md:text-3xl font-bold text-robux-blue">{formatTime(timeLeft)}</div>
                <div className="text-xs md:text-sm text-muted-foreground">–¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è</div>
              </div>
            )}

            <div className="space-y-4">
              <Button 
                onClick={() => window.open('https://filelu.com/87w2jnbpbfls', '_blank')}
                className="bg-robux-purple hover:bg-robux-purple/80 text-white font-bold py-4 md:py-6 px-8 md:px-12 rounded-xl text-lg md:text-2xl w-full md:w-auto"
              >
                üì± –°–∫–∞—á–∞—Ç—å –ê–≤—Ç–æ–∫–ª–∏–∫–µ—Ä PRO
              </Button>
              <p className="text-xs md:text-sm text-muted-foreground">
                –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–π –ø–æ–ª—É—á–µ–Ω–∏–µ —Ä–æ–±—É–∫—Å–æ–≤ 24/7
              </p>
            </div>
          </div>
        </Card>

        {/* Three Column Layout */}
        <div className="grid grid-cols-1 lg:grid-cols-3 gap-4 md:gap-6">
          
          {/* Live Chat */}
          <Card className="p-4 md:p-6">
            <h3 className="text-lg md:text-xl font-bold mb-4">üí¨ –ß–∞—Ç –∏–≥—Ä–æ–∫–æ–≤</h3>
            <div className="max-h-64 md:max-h-80 overflow-y-auto space-y-2 md:space-y-3 mb-4">
              {chatMessages.map((msg, index) => (
                <div key={index} className="flex items-start space-x-2 md:space-x-3 animate-fade-in">
                  <span className="text-base md:text-lg">{msg.avatar}</span>
                  <div className="flex-1">
                    <div className="flex items-center space-x-2">
                      <span className="font-semibold text-xs md:text-sm text-robux-blue">{msg.name}</span>
                      <span className="text-xs text-muted-foreground">{msg.time}</span>
                    </div>
                    <p className="text-xs md:text-sm text-foreground mt-1">{msg.message}</p>
                  </div>
                </div>
              ))}
            </div>
            <div className="flex space-x-2">
              <input 
                type="text" 
                value={chatMessage}
                onChange={(e) => setChatMessage(e.target.value)}
                placeholder="–ù–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ..." 
                className="flex-1 px-2 md:px-3 py-2 bg-input border border-border rounded-lg text-xs md:text-sm"
                onKeyPress={(e) => {
                  if (e.key === 'Enter' && chatMessage.trim()) {
                    setChatMessages(prev => [{
                      name: '–í—ã',
                      avatar: 'üéÆ',
                      message: chatMessage,
                      time: '—Å–µ–π—á–∞—Å'
                    }, ...prev.slice(0, 4)]);
                    setChatMessage('');
                  }
                }}
              />
              <Button 
                size="sm" 
                className="bg-robux-blue text-xs md:text-sm"
                onClick={() => {
                  if (chatMessage.trim()) {
                    setChatMessages(prev => [{
                      name: '–í—ã',
                      avatar: 'üéÆ',
                      message: chatMessage,
                      time: '—Å–µ–π—á–∞—Å'
                    }, ...prev.slice(0, 4)]);
                    setChatMessage('');
                  }
                }}
              >
                üì§
              </Button>
            </div>
          </Card>

          {/* Recent Activity - All 35 Players */}
          <Card className="p-4 md:p-6">
            <h3 className="text-lg md:text-xl font-bold mb-4">üî• –ù–µ–¥–∞–≤–Ω–∏–µ –≤—ã–∏–≥—Ä—ã—à–∏</h3>
            <div className="max-h-64 md:max-h-80 overflow-y-auto space-y-1 md:space-y-2">
              {players.map((player, index) => (
                <div key={index} className="player-card flex items-center justify-between">
                  <div className="flex items-center space-x-2 md:space-x-3">
                    <span className="text-base md:text-lg">{player.avatar}</span>
                    <div>
                      <div className="font-semibold text-xs md:text-sm">{player.name}</div>
                      <div className="text-xs text-muted-foreground">{player.time}</div>
                    </div>
                  </div>
                  <Badge className="bg-robux-gold text-black text-xs">+{player.robux} R$</Badge>
                </div>
              ))}
            </div>
          </Card>

          {/* Leaderboard */}
          <Card className="p-4 md:p-6">
            <h3 className="text-lg md:text-xl font-bold mb-4">üèÜ –¢–æ–ø –∏–≥—Ä–æ–∫–æ–≤</h3>
            <div className="space-y-2 md:space-y-3">
              {leaderboard.map((player) => (
                <div key={player.rank} className="player-card flex items-center justify-between">
                  <div className="flex items-center space-x-2 md:space-x-3">
                    <div className="w-6 h-6 md:w-8 md:h-8 rounded-full bg-robux-blue flex items-center justify-center text-white font-bold text-xs">
                      {player.rank}
                    </div>
                    <span className="text-base md:text-xl">{player.avatar}</span>
                    <div>
                      <div className="font-semibold text-xs md:text-sm">{player.name}</div>
                    </div>
                  </div>
                  <Badge className="bg-robux-gold text-black text-xs">{player.robux.toLocaleString()} R$</Badge>
                </div>
              ))}
            </div>
          </Card>
        </div>

        {/* Support Section */}
        <Card className="p-4 md:p-6">
          <h3 className="text-lg md:text-xl font-bold mb-4">üõ°Ô∏è –°–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏</h3>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4 md:gap-6">
            <div className="space-y-4">
              <div className="bg-secondary p-3 md:p-4 rounded-lg">
                <div className="flex items-center space-x-3 mb-2">
                  <div className="w-6 h-6 md:w-8 md:h-8 rounded-full bg-robux-green flex items-center justify-center">
                    <span className="text-xs md:text-sm font-bold text-background">S</span>
                  </div>
                  <div>
                    <div className="font-semibold text-xs md:text-sm">–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞</div>
                    <div className="text-xs text-muted-foreground">–û–Ω–ª–∞–π–Ω</div>
                  </div>
                </div>
                <p className="text-xs md:text-sm text-foreground">
                  –ü—Ä–∏–≤–µ—Ç! –£ –Ω–∞—Å –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã? –ú—ã –ø–æ–º–æ–∂–µ–º –≤–∞–º –ø–æ–ª—É—á–∏—Ç—å –≤–∞—à–∏ Robux! 
                  –°—Ä–µ–¥–Ω–∏–π –æ—Ç–≤–µ—Ç: 2 –º–∏–Ω—É—Ç—ã ‚ö°
                </p>
              </div>
              
              <div className="space-y-2">
                <Button 
                  onClick={() => setSupportOpen(true)}
                  className="w-full bg-robux-green hover:bg-robux-green/80 text-xs md:text-sm"
                >
                  üéß –°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π
                </Button>
                <Button 
                  onClick={() => window.open('https://t.me/zarabotay_depin', '_blank')}
                  className="w-full bg-robux-blue hover:bg-robux-blue/80 text-xs md:text-sm"
                >
                  üìû Telegram –ø–æ–¥–¥–µ—Ä–∂–∫–∞
                </Button>
              </div>
            </div>

            <div className="text-center space-y-2">
              <div className="text-sm font-semibold text-robux-gold">FAQ - –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å</div>
              <div className="text-xs text-yellow-500 space-y-1 text-left">
                <div>‚Ä¢ –ù–µ –ø–æ–ª—É—á–∞—é Robux? –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É!</div>
                <div>‚Ä¢ –ü—Ä–æ–º–æ-–∫–æ–¥ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç? –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!</div>
                <div>‚Ä¢ –ê–≤—Ç–æ–∫–ª–∏–∫–µ—Ä –±–µ–∑–æ–ø–∞—Å–µ–Ω? –î–∞, 100%!</div>
                <div>‚Ä¢ –ë–ª–æ–∫–∏—Ä—É—é—Ç –∞–∫–∫–∞—É–Ω—Ç? –ú—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å!</div>
                <div>‚Ä¢ –°–∫–æ–ª—å–∫–æ –º–æ–∂–Ω–æ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å? –î–æ 50–∫ Robux –≤ –¥–µ–Ω—å!</div>
                <div>‚Ä¢ –†–∞–±–æ—Ç–∞–µ—Ç –ª–∏ –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–µ? –î–∞, –ø–æ–ª–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞!</div>
                <div>‚Ä¢ –ù—É–∂–Ω–∞ –ª–∏ –ø–æ–¥–ø–∏—Å–∫–∞? –¢–æ–ª—å–∫–æ –Ω–∞ YouTube –∫–∞–Ω–∞–ª!</div>
                <div>‚Ä¢ –ú–æ–∂–Ω–æ –ª–∏ –ø—Ä–æ–∏–≥—Ä–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç? –ù–µ—Ç, —ç—Ç–æ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ!</div>
                <div>‚Ä¢ –ë–µ–∑–æ–ø–∞—Å–Ω—ã –ª–∏ –º–æ–∏ –¥–∞–Ω–Ω—ã–µ? –ê–±—Å–æ–ª—é—Ç–Ω–æ!</div>
                <div>‚Ä¢ –ú–æ–≥—É –ª–∏ —è –ø–æ—Ç–µ—Ä—è—Ç—å –∞–∫–∫–∞—É–Ω—Ç Roblox? –ù–∏–∫–æ–≥–¥–∞!</div>
                <div>‚Ä¢ –¢—Ä–µ–±—É–µ—Ç—Å—è –ª–∏ –ø–∞—Ä–æ–ª—å –æ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞? –ù–µ—Ç!</div>
                <div>‚Ä¢ –†–∞–±–æ—Ç–∞–µ—Ç –ª–∏ –∞–Ω—Ç–∏–≤–∏—Ä—É—Å —Å –∞–≤—Ç–æ–∫–ª–∏–∫–µ—Ä–æ–º? –î–∞!</div>
                <div>‚Ä¢ –ú–æ–∂–Ω–æ –ª–∏ –ø–æ–ª—É—á–∏—Ç—å –±–∞–Ω –≤ Roblox? –ù–µ—Ç, –º—ã –Ω–µ –Ω–∞—Ä—É—à–∞–µ–º –ø—Ä–∞–≤–∏–ª–∞!</div>
                <div>‚Ä¢ –ó–∞—â–∏—â–µ–Ω –ª–∏ –º–æ–π IP –∞–¥—Ä–µ—Å? –î–∞, –ø–æ–ª–Ω–∞—è –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å!</div>
                <div>‚Ä¢ –ú–æ–∂–µ—Ç –ª–∏ Roblox –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –º–æ–π –∞–∫–∫–∞—É–Ω—Ç? –ù–µ—Ç!</div>
                <div>‚Ä¢ –°–æ—Ö—Ä–∞–Ω—è–µ–º –ª–∏ –º—ã –≤–∞—à–∏ –ø–∞—Ä–æ–ª–∏? –ù–∏–∫–æ–≥–¥–∞ –Ω–µ —Å–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–∞—Ä–æ–ª–∏!</div>
                <div>‚Ä¢ –ú–æ–≥—É—Ç –ª–∏ —Ö–∞–∫–µ—Ä—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø? –ù–µ—Ç, 256-–±–∏—Ç–Ω–æ–µ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ!</div>
                <div>‚Ä¢ –ë–µ–∑–æ–ø–∞—Å–µ–Ω –ª–∏ –∞–≤—Ç–æ–∫–ª–∏–∫–µ—Ä –¥–ª—è Windows? –î–∞, –ø—Ä–æ–≤–µ—Ä–µ–Ω –∞–Ω—Ç–∏–≤–∏—Ä—É—Å–æ–º!</div>
                <div>‚Ä¢ –ú–æ–∂–Ω–æ –ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö? –î–∞, –ø–æ–ª–Ω–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å!</div>
                <div>‚Ä¢ –°–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –ª–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å –ø—Ä–∏ —Å–º–µ–Ω–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞? –î–∞, –≤ –æ–±–ª–∞–∫–µ!</div>
              </div>
            </div>
          </div>
        </Card>

        {/* Special Features */}
        <div className="grid grid-cols-1 md:grid-cols-4 gap-4">
          <Card className="p-4 text-center">
            <div className="text-3xl mb-2">üéØ</div>
            <h3 className="font-bold text-base mb-1">–ë–µ–∑ –ª–∏–º–∏—Ç–æ–≤</h3>
            <p className="text-xs text-muted-foreground">–ü–æ–ª—É—á–∞–π—Ç–µ Robux –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –≤—Ä–µ–º–µ–Ω–∏!</p>
          </Card>
          <Card className="p-4 text-center">
            <div className="text-3xl mb-2">‚ö°</div>
            <h3 className="font-bold text-base mb-1">–ú–≥–Ω–æ–≤–µ–Ω–Ω–æ</h3>
            <p className="text-xs text-muted-foreground">Robux –ø–æ—Å—Ç—É–ø–∞—é—Ç –Ω–∞ –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω–æ!</p>
          </Card>
          <Card className="p-4 text-center">
            <div className="text-3xl mb-2">üîí</div>
            <h3 className="font-bold text-base mb-1">–ë–µ–∑–æ–ø–∞—Å–Ω–æ</h3>
            <p className="text-xs text-muted-foreground">100% –±–µ–∑–æ–ø–∞—Å–Ω–æ –¥–ª—è –≤–∞—à–µ–≥–æ Roblox –∞–∫–∫–∞—É–Ω—Ç–∞!</p>
          </Card>
          <Card className="p-4 text-center">
            <div className="text-3xl mb-2">üéÆ</div>
            <h3 className="font-bold text-base mb-1">–î–ª—è –≤—Å–µ—Ö</h3>
            <p className="text-xs text-muted-foreground">–†–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö –∏ –±—Ä–∞—É–∑–µ—Ä–∞—Ö!</p>
          </Card>
        </div>

        {/* Additional Features */}
        <div className="grid grid-cols-1 md:grid-cols-2 gap-4 md:gap-6">
          <Card className="p-4 md:p-6">
            <h3 className="text-lg md:text-xl font-bold mb-4 text-robux-gold">üöÄ VIP –°—Ç–∞—Ç—É—Å</h3>
            <div className="space-y-3">
              <p className="text-xs md:text-sm text-muted-foreground">–ü–æ–ª—É—á–∏—Ç–µ VIP —Å—Ç–∞—Ç—É—Å –∏ —É–¥–≤–æ–π—Ç–µ —Å–≤–æ–∏ –≤—ã–∏–≥—Ä—ã—à–∏!</p>
              <div className="bg-gradient-to-r from-robux-gold/20 to-robux-purple/20 p-3 rounded-lg">
                <div className="text-xs md:text-sm font-semibold">VIP –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:</div>
                <div className="text-xs text-muted-foreground mt-1">
                  ‚Ä¢ –£–¥–≤–æ–µ–Ω–Ω—ã–µ –≤—ã–∏–≥—Ä—ã—à–∏<br/>
                  ‚Ä¢ –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –ø—Ä–æ–º–æ-–∫–æ–¥—ã<br/>
                  ‚Ä¢ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞<br/>
                  ‚Ä¢ –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –±–æ–Ω—É—Å—ã
                </div>
              </div>
              <Button 
                onClick={() => setVipModalOpen(true)}
                className="w-full bg-robux-gold hover:bg-robux-gold/80 text-black text-xs md:text-sm"
              >
                –ü–æ–ª—É—á–∏—Ç—å VIP –∑–∞ 1000 R$
              </Button>
            </div>
          </Card>
          
          <Card className="p-4 md:p-6">
            <h3 className="text-lg md:text-xl font-bold mb-4 text-robux-blue">üéÅ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ —Ä–æ–∑—ã–≥—Ä—ã—à–∏</h3>
            <div className="space-y-3">
              <p className="text-xs md:text-sm text-muted-foreground">–£—á–∞—Å—Ç–≤—É–π—Ç–µ –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–∞—Ö –∫–∞–∂–¥—ã–π –¥–µ–Ω—å!</p>
              <div className="bg-gradient-to-r from-robux-blue/20 to-robux-green/20 p-3 rounded-lg">
                <div className="text-xs md:text-sm font-semibold">–°–ª–µ–¥—É—é—â–∏–π —Ä–æ–∑—ã–≥—Ä—ã—à:</div>
                <div className="text-base md:text-lg font-bold text-robux-blue">25,000 Robux</div>
                <div className="text-xs text-muted-foreground flex items-center gap-1">
                  <Timer className="w-3 h-3" />
                  –û—Å—Ç–∞–ª–æ—Å—å: {formatLotteryTime(lotteryTimeLeft)}
                </div>
              </div>
              <Button 
                onClick={() => setLotteryModalOpen(true)}
                className="w-full bg-robux-blue hover:bg-robux-blue/80 text-xs md:text-sm"
              >
                –£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ
              </Button>
            </div>
          </Card>
        </div>

        {/* Bonus Section */}
        <Card className="p-6">
          <Tabs defaultValue="daily" className="w-full">
            <TabsList className="grid w-full grid-cols-2">
              <TabsTrigger value="daily">üéÅ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å</TabsTrigger>
              <TabsTrigger value="referral">üë• –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞</TabsTrigger>
            </TabsList>
            <TabsContent value="daily" className="space-y-4">
              <div className="text-center space-y-4">
                <h3 className="text-xl font-bold">–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å</h3>
                <p className="text-muted-foreground">–ó–∞—Ö–æ–¥–∏ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –∏ –ø–æ–ª—É—á–∞–π –±–æ–Ω—É—Å—ã!</p>
                <Button 
                  onClick={() => {
                    setDailyBonus(true);
                    setTotalRobux(prev => prev + 50);
                    toast({ title: "–ë–æ–Ω—É—Å –ø–æ–ª—É—á–µ–Ω! +50 Robux üéÅ" });
                  }}
                  disabled={dailyBonus}
                  className="bg-robux-green hover:bg-robux-green/80"
                >
                  {dailyBonus ? '–ü–æ–ª—É—á–µ–Ω–æ —Å–µ–≥–æ–¥–Ω—è ‚úÖ' : '–ü–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å +50 R$'}
                </Button>
              </div>
            </TabsContent>
            <TabsContent value="referral" className="space-y-4">
              <div className="text-center space-y-4">
                <h3 className="text-lg md:text-xl font-bold">–ü—Ä–∏–≥–ª–∞—à–∞–π –¥—Ä—É–∑–µ–π</h3>
                <p className="text-xs md:text-sm text-muted-foreground">–ó–∞ –∫–∞–∂–¥–æ–≥–æ –¥—Ä—É–≥–∞ –ø–æ–ª—É—á–∏ 1500 Robux!</p>
                <div className="bg-secondary p-3 md:p-4 rounded-lg">
                  <p className="text-xs md:text-sm mb-2">–¢–≤–æ—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:</p>
                  <div className="bg-background p-2 rounded border font-mono text-robux-blue text-xs break-all">
                    https://robux-generator.pro/?ref={referralCode}
                  </div>
                </div>
                <Button 
                  className="bg-robux-blue hover:bg-robux-blue/80 text-xs md:text-sm"
                  onClick={() => {
                    navigator.clipboard.writeText(`https://robux-generator.pro/?ref=${referralCode}`);
                    toast({ title: "–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞! üìã" });
                  }}
                >
                  –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É
                </Button>
              </div>
            </TabsContent>
          </Tabs>
        </Card>

        {/* Footer */}
        <Card className="p-4 md:p-6 bg-secondary">
          <div className="grid grid-cols-1 md:grid-cols-3 gap-4 md:gap-6">
            <div>
              <h4 className="font-bold text-robux-blue mb-2">üè¢ –ù–∞—à–∞ –∫–æ–º–ø–∞–Ω–∏—è</h4>
              <div className="text-xs space-y-1">
                <p>RobuxGen Solutions Ltd.</p>
                <p>üìç –ú–æ—Å–∫–≤–∞, —É–ª. –ì–µ–π–º–µ—Ä—Å–∫–∞—è 42</p>
                <p>üìß support@robuxgen.ru</p>
                <p>üìû +7 (495) 123-45-67</p>
              </div>
            </div>
            <div>
              <h4 className="font-bold text-robux-green mb-2">üë®‚Äçüíª –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏</h4>
              <div className="text-xs space-y-1">
                <p>–ê–ª–µ–∫—Å–µ–π –ü–µ—Ç—Ä–æ–≤ - CEO</p>
                <p>üìû +7 (926) 555-01-23</p>
                <p>–ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞ - CTO</p>
                <p>üìû +7 (916) 555-45-67</p>
                <p>–ò–≥–æ—Ä—å –ö–æ–∑–ª–æ–≤ - Lead Dev</p>
                <p>üìû +7 (903) 555-89-01</p>
              </div>
            </div>
            <div>
              <h4 className="font-bold text-robux-gold mb-2">‚öñÔ∏è –Æ—Ä–∏–¥–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h4>
              <div className="text-xs space-y-1">
                <p>–ò–ù–ù: 7701234567</p>
                <p>–û–ì–†–ù: 1157746123456</p>
                <p>–ö–ü–ü: 770101001</p>
                <p>üìû –Æ—Ä–∏—Å—Ç: +7 (495) 987-65-43</p>
                <p>¬© 2024 RobuxGen. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.</p>
              </div>
            </div>
          </div>
        </Card>
      </div>

      {/* Support Modal */}
      <Dialog open={supportOpen} onOpenChange={setSupportOpen}>
        <DialogContent className="text-center">
          <DialogHeader>
            <DialogTitle className="text-2xl">üõ°Ô∏è –°–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏</DialogTitle>
          </DialogHeader>
          <div className="py-6 space-y-4">
            <div className="text-lg font-semibold text-robux-green">–ö–∞–∫ –º—ã –º–æ–∂–µ–º –ø–æ–º–æ—á—å?</div>
            <div className="space-y-3 text-left">
              <div className="bg-secondary p-3 rounded-lg">
                <div className="font-semibold text-sm">‚ùì –ù–µ –ø–æ–ª—É—á–∞—é Robux</div>
                <p className="text-xs text-muted-foreground mt-1">–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª –∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</p>
              </div>
              <div className="bg-secondary p-3 rounded-lg">
                <div className="font-semibold text-sm">üéüÔ∏è –ü—Ä–æ–º–æ-–∫–æ–¥ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç</div>
                <p className="text-xs text-muted-foreground mt-1">–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –∫–æ–¥ –∑–∞–Ω–æ–≤–æ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É</p>
              </div>
              <div className="bg-secondary p-3 rounded-lg">
                <div className="font-semibold text-sm">üì± –ü—Ä–æ–±–ª–µ–º—ã —Å –∞–≤—Ç–æ–∫–ª–∏–∫–µ—Ä–æ–º</div>
                <p className="text-xs text-muted-foreground mt-1">–°–∫–∞—á–∞–π—Ç–µ –ø–æ—Å–ª–µ–¥–Ω—é—é –≤–µ—Ä—Å–∏—é –∏ –æ—Ç–∫–ª—é—á–∏—Ç–µ –∞–Ω—Ç–∏–≤–∏—Ä—É—Å</p>
              </div>
            </div>
            <Button 
              onClick={() => window.open('https://t.me/zarabotay_depin', '_blank')}
              className="w-full bg-robux-blue hover:bg-robux-blue/80"
            >
              üìû –ù–∞–ø–∏—Å–∞—Ç—å –≤ Telegram
            </Button>
          </div>
          <Button onClick={() => setSupportOpen(false)} className="w-full">
            –ó–∞–∫—Ä—ã—Ç—å
          </Button>
        </DialogContent>
      </Dialog>

      {/* VIP Modal */}
      <Dialog open={vipModalOpen} onOpenChange={setVipModalOpen}>
        <DialogContent className="text-center">
          <DialogHeader>
            <DialogTitle className="text-2xl">üöÄ VIP –°—Ç–∞—Ç—É—Å</DialogTitle>
          </DialogHeader>
          <div className="py-6">
            <div className="text-6xl mb-4">üëë</div>
            <div className="text-lg font-bold text-robux-gold mb-4">
              –ó–∞—Ö–æ–¥–∏ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ —Ç–µ—á–µ–Ω–∏–∏ 7 –¥–Ω–µ–π –∏ –ø–æ–ª—É—á–∏ VIP —Å—Ç–∞—Ç—É—Å –±–µ—Å–ø–ª–∞—Ç–Ω–æ!
            </div>
            <p className="text-sm text-muted-foreground">
              –ò–ª–∏ –∫—É–ø–∏ VIP –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å –∑–∞ 1000 Robux –∏ –ø–æ–ª—É—á–∏ –≤—Å–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ!
            </p>
          </div>
          <Button onClick={() => setVipModalOpen(false)} className="w-full">
            –ü–æ–Ω—è—Ç–Ω–æ
          </Button>
        </DialogContent>
      </Dialog>

      {/* Lottery Modal */}
      <Dialog open={lotteryModalOpen} onOpenChange={setLotteryModalOpen}>
        <DialogContent className="text-center">
          <DialogHeader>
            <DialogTitle className="text-2xl">üéÅ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π —Ä–æ–∑—ã–≥—Ä—ã—à</DialogTitle>
          </DialogHeader>
          <div className="py-6">
            <div className="text-6xl mb-4">üèÜ</div>
            <div className="text-lg font-bold text-robux-blue mb-4">
              –í—ã —É—Å–ø–µ—à–Ω–æ —É—á–∞—Å—Ç–≤—É–µ—Ç–µ –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ 25,000 Robux!
            </div>
            <p className="text-sm text-muted-foreground">
              –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –±—É–¥—É—Ç –æ–±—ä—è–≤–ª–µ–Ω—ã —á–µ—Ä–µ–∑: {formatLotteryTime(lotteryTimeLeft)}
            </p>
            <p className="text-xs text-muted-foreground mt-2">
              –£–≤–µ–ª–∏—á—å—Ç–µ —Å–≤–æ–∏ —à–∞–Ω—Å—ã, –ø—Ä–∏–≥–ª–∞—Å–∏–≤ –¥—Ä—É–∑–µ–π!
            </p>
          </div>
          <Button onClick={() => setLotteryModalOpen(false)} className="w-full">
            –û—Ç–ª–∏—á–Ω–æ!
          </Button>
        </DialogContent>
      </Dialog>

      {/* Win Modal */}
      <Dialog open={showWinModal} onOpenChange={setShowWinModal}>
        <DialogContent className="text-center">
          <DialogHeader>
            <DialogTitle className="text-2xl">
              {lastWin.type === 'mega' ? 'üéâ –ú–ï–ì–ê –í–´–ò–ì–†–´–®! üéâ' : 
               lastWin.type === 'promo' ? 'üéüÔ∏è –ü–†–û–ú–û-–ö–û–î! üéüÔ∏è' : 'üíé –ü–û–ó–î–†–ê–í–õ–Ø–ï–ú! üíé'}
            </DialogTitle>
          </DialogHeader>
          <div className="py-6">
            <div className="text-6xl coin-animation mb-4">
              {lastWin.type === 'mega' ? 'üí∞' : lastWin.type === 'promo' ? 'üéüÔ∏è' : 'üíé'}
            </div>
            <div className="text-4xl font-bold robux-glow mb-2">
              {lastWin.type === 'promo' ? 'RBLX2024FREE' : `+${lastWin.amount} Robux`}
            </div>
            <p className="text-muted-foreground">
              {lastWin.type === 'mega' ? '–ù–µ–≤–µ—Ä–æ—è—Ç–Ω–∞—è —É–¥–∞—á–∞!' : 
               lastWin.type === 'promo' ? '–ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–¥ –≤ Roblox' : '–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞!'}
            </p>
          </div>
          <Button onClick={() => setShowWinModal(false)} className="w-full">
            –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å
          </Button>
        </DialogContent>
      </Dialog>
    </div>
  );
};

export default Index;